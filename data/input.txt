#include<sys/param.h>#include<sys/systm.h>#include<crypto/blf.h>#undefinline#ifdef__GNUC__#defineinline__inline#else#defineinline#endif#defineF(s,x)((((s)[(((x)>>24)&0xFF)]\+(s)[0x100+(((x)>>16)&0xFF)])\^(s)[0x200+(((x)>>8)&0xFF)])\+(s)[0x300+((x)&0xFF)]
)#defineBLFRND(s,p,i,j,n)(i^=F(s,j)^(p)[n])voidBlowfish_encipher(c,x)blf_ctx*c;u_int32_t*x;{u_int32_tXl;u_int32_tXr;u_int32_t*s=c->S[0];u_int32_t*p=c->P;Xl=x[0];Xr=x[1];Xl^=p[0];BLFRND(s,p,Xr,Xl,1);BLFRND(s,p,Xl,Xr,2);BLFRND(s,p,Xr,Xl,3);BLFRND(s,p,Xl,Xr
,4);BLFRND(s,p,Xr,Xl,5);BLFRND(s,p,Xl,Xr,6);BLFRND(s,p,Xr,Xl,7);BLFRND(s,p,Xl,Xr,8);BLFRND(s,p,Xr,Xl,9);BLFRND(s,p,Xl,Xr,10);BLFRND(s,p,Xr,Xl,11);BLFRND(s,p,Xl,Xr,12);BLFRND(s,p,Xr,Xl,13);BLFRND(s,p,Xl,Xr,14);BLFRND(s,p,Xr,Xl,15);BLFRND(s,p,Xl,Xr,16);x[0
]=Xr^p[17];x[1]=Xl;}voidBlowfish_decipher(c,x)blf_ctx*c;u_int32_t*x;{u_int32_tXl;u_int32_tXr;u_int32_t*s=c->S[0];u_int32_t*p=c->P;Xl=x[0];Xr=x[1];Xl^=p[17];BLFRND(s,p,Xr,Xl,16);BLFRND(s,p,Xl,Xr,15);BLFRND(s,p,Xr,Xl,14);BLFRND(s,p,Xl,Xr,13);BLFRND(s,p,Xr,
Xl,12);BLFRND(s,p,Xl,Xr,11);BLFRND(s,p,Xr,Xl,10);BLFRND(s,p,Xl,Xr,9);BLFRND(s,p,Xr,Xl,8);BLFRND(s,p,Xl,Xr,7);BLFRND(s,p,Xr,Xl,6);BLFRND(s,p,Xl,Xr,5);BLFRND(s,p,Xr,Xl,4);BLFRND(s,p,Xl,Xr,3);BLFRND(s,p,Xr,Xl,2);BLFRND(s,p,Xl,Xr,1);x[0]=Xr^p[0];x[1]=Xl;}voi
dBlowfish_initstate(c)blf_ctx*c;{constblf_ctxinitstate={{{0xd1310ba6,0x98dfb5ac,0x2ffd72db,0xd01adfb7,0xb8e1afed,0x6a267e96,0xba7c9045,0xf12c7f99,0x24a19947,0xb3916cf7,0x0801f2e2,0x858efc16,0x636920d8,0x71574e69,0xa458fea3,0xf4933d7e,0x0d95748f,0x728eb65
8,0x718bcd58,0x82154aee,0x7b54a41d,0xc25a59b5,0x9c30d539,0x2af26013,0xc5d1b023,0x286085f0,0xca417918,0xb8db38ef,0x8e79dcb0,0x603a180e,0x6c9e0e8b,0xb01e8a3e,0xd71577c1,0xbd314b27,0x78af2fda,0x55605c60,0xe65525f3,0xaa55ab94,0x57489862,0x63e81440,0x55ca396a
,0x2aab10b6,0xb4cc5c34,0x1141e8ce,0xa15486af,0x7c72e993,0xb3ee1411,0x636fbc2a,0x2ba9c55d,0x741831f6,0xce5c3e16,0x9b87931e,0xafd6ba33,0x6c24cf5c,0x7a325381,0x28958677,0x3b8f4898,0x6b4bb9af,0xc4bfe81b,0x66282193,0x61d809cc,0xfb21a991,0x487cac60,0x5dec8032,
0xef845d5d,0xe98575b1,0xdc262302,0xeb651b88,0x23893e81,0xd396acc5,0x0f6d6ff3,0x83f44239,0x2e0b4482,0xa4842004,0x69c8f04a,0x9e1f9b5e,0x21c66842,0xf6e96c9a,0x670c9c61,0xabd388f0,0x6a51a0d2,0xd8542f68,0x960fa728,0xab5133a3,0x6eef0b6c,0x137a3be4,0xba3bf050,0
x7efb2a98,0xa1f1651d,0x39af0176,0x66ca593e,0x82430e88,0x8cee8619,0x456f9fb4,0x7d84a5c3,0x3b8b5ebe,0xe06f75d8,0x85c12073,0x401a449f,0x56c16aa6,0x4ed3aa62,0x363f7706,0x1bfedf72,0x429b023d,0x37d0d724,0xd00a1248,0xdb0fead3,0x49f1c09b,0x075372c9,0x80991b7b,0x
25d479d8,0xf6e8def7,0xe3fe501a,0xb6794c3b,0x976ce0bd,0x04c006ba,0xc1a94fb6,0x409f60c4,0x5e5c9ec2,0x196a2463,0x68fb6faf,0x3e6c53b5,0x1339b2eb,0x3b52ec6f,0x6dfc511f,0x9b30952c,0xcc814544,0xaf5ebd09,0xbee3d004,0xde334afd,0x660f2807,0x192e4bb3,0xc0cba857,0x4
5c8740f,0xd20b5f39,0xb9d3fbdb,0x5579c0bd,0x1a60320a,0xd6a100c6,0x402c7279,0x679f25fe,0xfb1fa3cc,0x8ea5e9f8,0xdb3222f8,0x3c7516df,0xfd616b15,0x2f501ec8,0xad0552ab,0x323db5fa,0xfd238760,0x53317b48,0x3e00df82,0x9e5c57bb,0xca6f8ca0,0x1a87562e,0xdf1769db,0xd5
42a8f6,0x287effc3,0xac6732c6,0x8c4f5573,0x695b27b0,0xbbca58c8,0xe1ffa35d,0xb8f011a0,0x10fa3d98,0xfd2183b8,0x4afcb56c,0x2dd1d35b,0x9a53e479,0xb6f84565,0xd28e49bc,0x4bfb9790,0xe1ddf2da,0xa4cb7e33,0x62fb1341,0xcee4c6e8,0xef20cada,0x36774c01,0xd07e9efe,0x2bf
11fb4,0x95dbda4d,0xae909198,0xeaad8e71,0x6b93d5a0,0xd08ed1d0,0xafc725e0,0x8e3c5b2f,0x8e7594b7,0x8ff6e2fb,0xf2122b64,0x8888b812,0x900df01c,0x4fad5ea0,0x688fc31c,0xd1cff191,0xb3a8c1ad,0x2f2f2218,0xbe0e1777,0xea752dfe,0x8b021fa1,0xe5a0cc0f,0xb56f74e8,0x18ac
f3d6,0xce89e299,0xb4a84fe0,0xfd13e0b7,0x7cc43b81,0xd2ada8d9,0x165fa266,0x80957705,0x93cc7314,0x211a1477,0xe6ad2065,0x77b5fa86,0xc75442f5,0xfb9d35cf,0xebcdaf0c,0x7b3e89a0,0xd6411bd3,0xae1e7e49,0x00250e2d,0x2071b35e,0x226800bb,0x57b8e0af,0x2464369b,0xf009b
91e,0x5563911d,0x59dfa6aa,0x78c14389,0xd95a537f,0x207d5ba2,0x02e5b9c5,0x83260376,0x6295cfa9,0x11c81968,0x4e734a41,0xb3472dca,0x7b14a94a,0x1b510052,0x9a532915,0xd60f573f,0xbc9bc6e4,0x2b60a476,0x81e67400,0x08ba6fb5,0x571be91f,0xf296ec6b,0x2a0dd915,0xb66365
21,0xe7b9f9b6,0xff34052e,0xc5855664,0x53b02d5d,0xa99f8fa1,0x08ba4799,0x6e85076a},{0x4b7a70e9,0xb5b32944,0xdb75092e,0xc4192623,0xad6ea6b0,0x49a7df7d,0x9cee60b8,0x8fedb266,0xecaa8c71,0x699a17ff,0x5664526c,0xc2b19ee1,0x193602a5,0x75094c29,0xa0591340,0xe4183
a3e,0x3f54989a,0x5b429d65,0x6b8fe4d6,0x99f73fd6,0xa1d29c07,0xefe830f5,0x4d2d38e6,0xf0255dc1,0x4cdd2086,0x8470eb26,0x6382e9c6,0x021ecc5e,0x09686b3f,0x3ebaefc9,0x3c971814,0x6b6a70a1,0x687f3584,0x52a0e286,0xb79c5305,0xaa500737,0x3e07841c,0x7fdeae5c,0x8e7d44
ec,0x5716f2b8,0xb03ada37,0xf0500c0d,0xf01c1f04,0x0200b3ff,0xae0cf51a,0x3cb574b2,0x25837a58,0xdc0921bd,0xd19113f9,0x7ca92ff6,0x94324773,0x22f54701,0x3ae5e581,0x37c2dadc,0xc8b57634,0x9af3dda7,0xa9446146,0x0fd0030e,0xecc8c73e,0xa4751e41,0xe238cd99,0x3bea0e2
f,0x3280bba1,0x183eb331,0x4e548b38,0x4f6db908,0x6f420d03,0xf60a04bf,0x2cb81290,0x24977c79,0x5679b072,0xbcaf89af,0xde9a771f,0xd9930810,0xb38bae12,0xdccf3f2e,0x5512721f,0x2e6b7124,0x501adde6,0x9f84cd87,0x7a584718,0x7408da17,0xbc9f9abc,0xe94b7d8c,0xec7aec3a
,0xdb851dfa,0x63094366,0xc464c3d2,0xef1c1847,0x3215d908,0xdd433b37,0x24c2ba16,0x12a14d43,0x2a65c451,0x50940002,0x133ae4dd,0x71dff89e,0x10314e55,0x81ac77d6,0x5f11199b,0x043556f1,0xd7a3c76b,0x3c11183b,0x5924a509,0xf28fe6ed,0x97f1fbfa,0x9ebabf2c,0x1e153c6e,
0x86e34570,0xeae96fb1,0x860e5e0a,0x5a3e2ab3,0x771fe71c,0x4e3d06fa,0x2965dcb9,0x99e71d0f,0x803e89d6,0x5266c825,0x2e4cc978,0x9c10b36a,0xc6150eba,0x94e2ea78,0xa5fc3c53,0x1e0a2df4,0xf2f74ea7,0x361d2b3d,0x1939260f,0x19c27960,0x5223a708,0xf71312b6,0xebadfe6e,0
xeac31f66,0xe3bc4595,0xa67bc883,0xb17f37d1,0x018cff28,0xc332ddef,0xbe6c5aa5,0x65582185,0x68ab9802,0xeecea50f,0xdb2f953b,0x2aef7dad,0x5b6e2f84,0x1521b628,0x29076170,0xecdd4775,0x619f1510,0x13cca830,0xeb61bd96,0x0334fe1e,0xaa0363cf,0xb5735c90,0x4c70a239,0x
d59e9e0b,0xcbaade14,0xeecc86bc,0x60622ca7,0x9cab5cab,0xb2f3846e,0x648b1eaf,0x19bdf0ca,0xa02369b9,0x655abb50,0x40685a32,0x3c2ab4b3,0x319ee9d5,0xc021b8f7,0x9b540b19,0x875fa099,0x95f7997e,0x623d7da8,0xf837889a,0x97e32d77,0x11ed935f,0x16681281,0x0e358829,0xc
7e61fd6,0x96dedfa1,0x7858ba99,0x57f584a5,0x1b227263,0x9b83c3ff,0x1ac24696,0xcdb30aeb,0x532e3054,0x8fd948e4,0x6dbc3128,0x58ebf2ef,0x34c6ffea,0xfe28ed61,0xee7c3c73,0x5d4a14d9,0xe864b7e3,0x42105d14,0x203e13e0,0x45eee2b6,0xa3aaabea,0xdb6c4f15,0xfacb4fd0,0xc7
42f442,0xef6abbb5,0x654f3b1d,0x41cd2105,0xd81e799e,0x86854dc7,0xe44b476a,0x3d816250,0xcf62a1f2,0x5b8d2646,0xfc8883a0,0xc1c7b6a3,0x7f1524c3,0x69cb7492,0x47848a0b,0x5692b285,0x095bbf00,0xad19489d,0x1462b174,0x23820e00,0x58428d2a,0x0c55f5ea,0x1dadf43e,0x233
f7061,0x3372f092,0x8d937e41,0xd65fecf1,0x6c223bdb,0x7cde3759,0xcbee7460,0x4085f2a7,0xce77326e,0xa6078084,0x19f8509e,0xe8efd855,0x61d99735,0xa969a7aa,0xc50c06c2,0x5a04abfc,0x800bcadc,0x9e447a2e,0xc3453484,0xfdd56705,0x0e1e9ec9,0xdb73dbd3,0x105588cd,0x675f
da79,0xe3674340,0xc5c43465,0x713e38d8,0x3d28f89e,0xf16dff20,0x153e21e7,0x8fb03d4a,0xe6e39f2b,0xdb83adf7},{0xe93d5a68,0x948140f7,0xf64c261c,0x94692934,0x411520f7,0x7602d4f7,0xbcf46b2e,0xd4a20068,0xd4082471,0x3320f46a,0x43b7d4b7,0x500061af,0x1e39f62e,0x972
44546,0x14214f74,0xbf8b8840,0x4d95fc1d,0x96b591af,0x70f4ddd3,0x66a02f45,0xbfbc09ec,0x03bd9785,0x7fac6dd0,0x31cb8504,0x96eb27b3,0x55fd3941,0xda2547e6,0xabca0a9a,0x28507825,0x530429f4,0x0a2c86da,0xe9b66dfb,0x68dc1462,0xd7486900,0x680ec0a4,0x27a18dee,0x4f3f
fea2,0xe887ad8c,0xb58ce006,0x7af4d6b6,0xaace1e7c,0xd3375fec,0xce78a399,0x406b2a42,0x20fe9e35,0xd9f385b9,0xee39d7ab,0x3b124e8b,0x1dc9faf7,0x4b6d1856,0x26a36631,0xeae397b2,0x3a6efa74,0xdd5b4332,0x6841e7f7,0xca7820fb,0xfb0af54e,0xd8feb397,0x454056ac,0xba489
527,0x55533a3a,0x20838d87,0xfe6ba9b7,0xd096954b,0x55a867bc,0xa1159a58,0xcca92963,0x99e1db33,0xa62a4a56,0x3f3125f9,0x5ef47e1c,0x9029317c,0xfdf8e802,0x04272f70,0x80bb155c,0x05282ce3,0x95c11548,0xe4c66d22,0x48c1133f,0xc70f86dc,0x07f9c9ee,0x41041f0f,0x404779
a4,0x5d886e17,0x325f51eb,0xd59bc0d1,0xf2bcc18f,0x41113564,0x257b7834,0x602a9c60,0xdff8e8a3,0x1f636c1b,0x0e12b4c2,0x02e1329e,0xaf664fd1,0xcad18115,0x6b2395e0,0x333e92e1,0x3b240b62,0xeebeb922,0x85b2a20e,0xe6ba0d99,0xde720c8c,0x2da2f728,0xd0127845,0x95b794f
d,0x647d0862,0xe7ccf5f0,0x5449a36f,0x877d48fa,0xc39dfd27,0xf33e8d1e,0x0a476341,0x992eff74,0x3a6f6eab,0xf4f8fd37,0xa812dc60,0xa1ebddf8,0x991be14c,0xdb6e6b0d,0xc67b5510,0x6d672c37,0x2765d43b,0xdcd0e804,0xf1290dc7,0xcc00ffa3,0xb5390f92,0x690fed0b,0x667b9ffb
,0xcedb7d9c,0xa091cf0b,0xd9155ea3,0xbb132f88,0x515bad24,0x7b9479bf,0x763bd6eb,0x37392eb3,0xcc115979,0x8026e297,0xf42e312d,0x6842ada7,0xc66a2b3b,0x12754ccc,0x782ef11c,0x6a124237,0xb79251e7,0x06a1bbe6,0x4bfb6350,0x1a6b1018,0x11caedfa,0x3d25bdd8,0xe2e1c3c9,
0x44421659,0x0a121386,0xd90cec6e,0xd5abea2a,0x64af674e,0xda86a85f,0xbebfe988,0x64e4c3fe,0x9dbc8057,0xf0f7c086,0x60787bf8,0x6003604d,0xd1fd8346,0xf6381fb0,0x7745ae04,0xd736fccc,0x83426b33,0xf01eab71,0xb0804187,0x3c005e5f,0x77a057be,0xbde8ae24,0x55464299,0
xbf582e61,0x4e58f48f,0xf2ddfda2,0xf474ef38,0x8789bdc2,0x5366f9c3,0xc8b38e74,0xb475f255,0x46fcd9b9,0x7aeb2661,0x8b1ddf84,0x846a0e79,0x915f95e2,0x466e598e,0x20b45770,0x8cd55591,0xc902de4c,0xb90bace1,0xbb8205d0,0x11a86248,0x7574a99e,0xb77f19b6,0xe0a9dc09,0x
662d09a1,0xc4324633,0xe85a1f02,0x09f0be8c,0x4a99a025,0x1d6efe10,0x1ab93d1d,0x0ba5a4df,0xa186f20f,0x2868f169,0xdcb7da83,0x573906fe,0xa1e2ce9b,0x4fcd7f52,0x50115e01,0xa70683fa,0xa002b5c4,0x0de6d027,0x9af88c27,0x773f8641,0xc3604c06,0x61a806b5,0xf0177a28,0xc
0f586e0,0x006058aa,0x30dc7d62,0x11e69ed7,0x2338ea63,0x53c2dd94,0xc2c21634,0xbbcbee56,0x90bcb6de,0xebfc7da1,0xce591d76,0x6f05e409,0x4b7c0188,0x39720a3d,0x7c927c24,0x86e3725f,0x724d9db9,0x1ac15bb4,0xd39eb8fc,0xed545578,0x08fca5b5,0xd83d7cd3,0x4dad0fc4,0x1e
50ef5e,0xb161e6f8,0xa28514d9,0x6c51133c,0x6fd5c7e7,0x56e14ec4,0x362abfce,0xddc6c837,0xd79a3234,0x92638212,0x670efa8e,0x406000e0},{0x3a39ce37,0xd3faf5cf,0xabc27737,0x5ac52d1b,0x5cb0679e,0x4fa33742,0xd3822740,0x99bc9bbe,0xd5118e9d,0xbf0f7315,0xd62d1c7e,0xc
700c47b,0xb78c1b6b,0x21a19045,0xb26eb1be,0x6a366eb4,0x5748ab2f,0xbc946e79,0xc6a376d2,0x6549c2c8,0x530ff8ee,0x468dde7d,0xd5730a1d,0x4cd04dc6,0x2939bbdb,0xa9ba4650,0xac9526e8,0xbe5ee304,0xa1fad5f0,0x6a2d519a,0x63ef8ce2,0x9a86ee22,0xc089c2b8,0x43242ef6,0xa5
1e03aa,0x9cf2d0a4,0x83c061ba,0x9be96a4d,0x8fe51550,0xba645bd6,0x2826a2f9,0xa73a3ae1,0x4ba99586,0xef5562e9,0xc72fefd3,0xf752f7da,0x3f046f69,0x77fa0a59,0x80e4a915,0x87b08601,0x9b09e6ad,0x3b3ee593,0xe990fd5a,0x9e34d797,0x2cf0b7d9,0x022b8b51,0x96d5ac3a,0x017
da67d,0xd1cf3ed6,0x7c7d2d28,0x1f9f25cf,0xadf2b89b,0x5ad6b472,0x5a88f54c,0xe029ac71,0xe019a5e6,0x47b0acfd,0xed93fa9b,0xe8d3c48d,0x283b57cc,0xf8d56629,0x79132e28,0x785f0191,0xed756055,0xf7960e44,0xe3d35e8c,0x15056dd4,0x88f46dba,0x03a16125,0x0564f0bd,0xc3eb
9e15,0x3c9057a2,0x97271aec,0xa93a072a,0x1b3f6d9b,0x1e6321f5,0xf59c66fb,0x26dcf319,0x7533d928,0xb155fdf5,0x03563482,0x8aba3cbb,0x28517711,0xc20ad9f8,0xabcc5167,0xccad925f,0x4de81751,0x3830dc8e,0x379d5862,0x9320f991,0xea7a90c2,0xfb3e7bce,0x5121ce64,0x774fb
e32,0xa8b6e37e,0xc3293d46,0x48de5369,0x6413e680,0xa2ae0810,0xdd6db224,0x69852dfd,0x09072166,0xb39a460a,0x6445c0dd,0x586cdecf,0x1c20c8ae,0x5bbef7dd,0x1b588d40,0xccd2017f,0x6bb4e3bb,0xdda26a7e,0x3a59ff45,0x3e350a44,0xbcb4cdd5,0x72eacea8,0xfa6484bb,0x8d6612
ae,0xbf3c6f47,0xd29be463,0x542f5d9e,0xaec2771b,0xf64e6370,0x740e0d8d,0xe75b1357,0xf8721671,0xaf537d5d,0x4040cb08,0x4eb4e2cc,0x34d2466a,0x0115af84,0xe1b00428,0x95983a1d,0x06b89fb4,0xce6ea048,0x6f3f3b82,0x3520ab82,0x011a1d4b,0x277227f8,0x611560b1,0xe7933fd
c,0xbb3a792b,0x344525bd,0xa08839e1,0x51ce794b,0x2f32c9b7,0xa01fbac9,0xe01cc87e,0xbcc7d1f6,0xcf0111c3,0xa1e8aac7,0x1a908749,0xd44fbd9a,0xd0dadecb,0xd50ada38,0x0339c32a,0xc6913667,0x8df9317c,0xe0b12b4f,0xf79e59b7,0x43f5bb3a,0xf2d519ff,0x27d9459c,0xbf97222c
,0x15e6fc2a,0x0f91fc71,0x9b941525,0xfae59361,0xceb69ceb,0xc2a86459,0x12baa8d1,0xb6c1075e,0xe3056a0c,0x10d25065,0xcb03a442,0xe0ec6e0e,0x1698db3b,0x4c98a0be,0x3278e964,0x9f1f9532,0xe0d392df,0xd3a0342b,0x8971f21e,0x1b0a7441,0x4ba3348c,0xc5be7120,0xc37632d8,
0xdf359f8d,0x9b992f2e,0xe60b6f47,0x0fe3f11d,0xe54cda54,0x1edad891,0xce6279cf,0xcd3e7e6f,0x1618b166,0xfd2c1d05,0x848fd2c5,0xf6fb2299,0xf523f357,0xa6327623,0x93a83531,0x56cccd02,0xacf08162,0x5a75ebb5,0x6e163697,0x88d273cc,0xde966292,0x81b949d0,0x4c50901b,0
x71c65614,0xe6c6c7bd,0x327a140a,0x45e1d006,0xc3f27b9a,0xc9aa53fd,0x62a80f00,0xbb25bfe2,0x35bdd2f6,0x71126905,0xb2040222,0xb6cbcf7c,0xcd769c2b,0x53113ec0,0x1640e3d3,0x38abbd60,0x2547adf0,0xba38209c,0xf746ce76,0x77afa1c5,0x20756060,0x85cbfe4e,0x8ae88dd8,0x
7aaaf9b0,0x4cf9aa7e,0x1948c25c,0x02fb8a8c,0x01c36ae4,0xd6ebe1f9,0x90d4f869,0xa65cdea0,0x3f09252d,0xc208e69f,0xb74e6132,0xce77e25b,0x578fdfe3,0x3ac372e6}},{0x243f6a88,0x85a308d3,0x13198a2e,0x03707344,0xa4093822,0x299f31d0,0x082efa98,0xec4e6c89,0x452821e6,
0x38d01377,0xbe5466cf,0x34e90c6c,0xc0ac29b7,0xc97c50dd,0x3f84d5b5,0xb5470917,0x9216d5d9,0x8979fb1b}};*c=initstate;}#ifdef__STDC__u_int32_tBlowfish_stream2word(constu_int8_t*data,u_int16_tdatabytes,u_int16_t*current)#elseu_int32_tBlowfish_stream2word(data
,databytes,current)constu_int8_t*data;u_int16_tdatabytes;u_int16_t*current;#endif{u_int8_ti;u_int16_tj;u_int32_ttemp;temp=0x00000000;j=*current;for(i=0;i<4;i++,j++){if(j>=databytes)j=0;temp=(temp<<8)|data[j];}*current=j;returntemp;}#if__STDC__voidBlowfis
h_expand0state(blf_ctx*c,constu_int8_t*key,u_int16_tkeybytes)#elsevoidBlowfish_expand0state(c,key,keybytes)blf_ctx*c;constu_int8_t*key;u_int16_tkeybytes;#endif{u_int16_ti;u_int16_tj;u_int16_tk;u_int32_ttemp;u_int32_tdata[2];j=0;for(i=0;i<BLF_N+2;i++){tem
p=Blowfish_stream2word(key,keybytes,&j);c->P[i]=c->P[i]^temp;}j=0;data[0]=0x00000000;data[1]=0x00000000;for(i=0;i<BLF_N+2;i+=2){Blowfish_encipher(c,data);c->P[i]=data[0];c->P[i+1]=data[1];}for(i=0;i<4;i++){for(k=0;k<256;k+=2){Blowfish_encipher(c,data);c-
>S[i][k]=data[0];c->S[i][k+1]=data[1];}}}#if__STDC__voidBlowfish_expandstate(blf_ctx*c,constu_int8_t*data,u_int16_tdatabytes,constu_int8_t*key,u_int16_tkeybytes)#elsevoidBlowfish_expandstate(c,data,databytes,key,keybytes)blf_ctx*c;constu_int8_t*data;u_in
t16_tdatabytes;constu_int8_t*key;u_int16_tkeybytes;#endif{u_int16_ti;u_int16_tj;u_int16_tk;u_int32_ttemp;u_int32_td[2];j=0;for(i=0;i<BLF_N+2;i++){temp=Blowfish_stream2word(key,keybytes,&j);c->P[i]=c->P[i]^temp;}j=0;d[0]=0x00000000;d[1]=0x00000000;for(i=0
;i<BLF_N+2;i+=2){d[0]^=Blowfish_stream2word(data,databytes,&j);d[1]^=Blowfish_stream2word(data,databytes,&j);Blowfish_encipher(c,d);c->P[i]=d[0];c->P[i+1]=d[1];}for(i=0;i<4;i++){for(k=0;k<256;k+=2){d[0]^=Blowfish_stream2word(data,databytes,&j);d[1]^=Blow
fish_stream2word(data,databytes,&j);Blowfish_encipher(c,d);c->S[i][k]=d[0];c->S[i][k+1]=d[1];}}}#if__STDC__voidblf_key(blf_ctx*c,constu_int8_t*k,u_int16_tlen)#elsevoidblf_key(c,k,len)blf_ctx*c;constu_int8_t*k;u_int16_tlen;#endif{Blowfish_initstate(c);Blo
wfish_expand0state(c,k,len);}#if__STDC__voidblf_enc(blf_ctx*c,u_int32_t*data,u_int16_tblocks)#elsevoidblf_enc(c,data,blocks)blf_ctx*c;u_int32_t*data;u_int16_tblocks;#endif{u_int32_t*d;u_int16_ti;d=data;for(i=0;i<blocks;i++){Blowfish_encipher(c,d);d+=2;}}
#if__STDC__voidblf_dec(blf_ctx*c,u_int32_t*data,u_int16_tblocks)#elsevoidblf_dec(c,data,blocks)blf_ctx*c;u_int32_t*data;u_int16_tblocks;#endif{u_int32_t*d;u_int16_ti;d=data;for(i=0;i<blocks;i++){Blowfish_decipher(c,d);d+=2;}}#if__STDC__voidblf_ecb_encryp
t(blf_ctx*c,u_int8_t*data,u_int32_tlen)#elsevoidblf_ecb_encrypt(c,data,len)blf_ctx*c;u_int8_t*data;u_int32_tlen;#endif{u_int32_tl,r,d[2];u_int32_ti;for(i=0;i<len;i+=8){l=data[0]<<24|data[1]<<16|data[2]<<8|data[3];r=data[4]<<24|data[5]<<16|data[6]<<8|data
[7];d[0]=l;d[1]=r;Blowfish_encipher(c,d);l=d[0];r=d[1];data[0]=l>>24&0xff;data[1]=l>>16&0xff;data[2]=l>>8&0xff;data[3]=l&0xff;data[4]=r>>24&0xff;data[5]=r>>16&0xff;data[6]=r>>8&0xff;data[7]=r&0xff;data+=8;}}#if__STDC__voidblf_ecb_decrypt(blf_ctx*c,u_int8
_t*data,u_int32_tlen)#elsevoidblf_ecb_decrypt(c,data,len)blf_ctx*c;u_int8_t*data;u_int32_tlen;#endif{u_int32_tl,r,d[2];u_int32_ti;for(i=0;i<len;i+=8){l=data[0]<<24|data[1]<<16|data[2]<<8|data[3];r=data[4]<<24|data[5]<<16|data[6]<<8|data[7];d[0]=l;d[1]=r;
Blowfish_decipher(c,d);l=d[0];r=d[1];data[0]=l>>24&0xff;data[1]=l>>16&0xff;data[2]=l>>8&0xff;data[3]=l&0xff;data[4]=r>>24&0xff;data[5]=r>>16&0xff;data[6]=r>>8&0xff;data[7]=r&0xff;data+=8;}}#if__STDC__voidblf_cbc_encrypt(blf_ctx*c,u_int8_t*iv,u_int8_t*dat
a,u_int32_tlen)#elsevoidblf_cbc_encrypt(c,iv,data,len)blf_ctx*c;u_int8_t*iv;u_int8_t*data;u_int32_tlen;#endif{u_int32_tl,r,d[2];u_int32_ti,j;for(i=0;i<len;i+=8){for(j=0;j<8;j++)data[j]^=iv[j];l=data[0]<<24|data[1]<<16|data[2]<<8|data[3];r=data[4]<<24|dat
a[5]<<16|data[6]<<8|data[7];d[0]=l;d[1]=r;Blowfish_encipher(c,d);l=d[0];r=d[1];data[0]=l>>24&0xff;data[1]=l>>16&0xff;data[2]=l>>8&0xff;data[3]=l&0xff;data[4]=r>>24&0xff;data[5]=r>>16&0xff;data[6]=r>>8&0xff;data[7]=r&0xff;iv=data;data+=8;}}#if__STDC__void
blf_cbc_decrypt(blf_ctx*c,u_int8_t*iva,u_int8_t*data,u_int32_tlen)#elsevoidblf_cbc_decrypt(c,iva,data,len)blf_ctx*c;u_int8_t*iva;u_int8_t*data;u_int32_tlen;#endif{u_int32_tl,r,d[2];u_int8_t*iv;u_int32_ti,j;iv=data+len-16;data=data+len-8;for(i=len-8;i>=8;
i-=8){l=data[0]<<24|data[1]<<16|data[2]<<8|data[3];r=data[4]<<24|data[5]<<16|data[6]<<8|data[7];d[0]=l;d[1]=r;Blowfish_decipher(c,d);l=d[0];r=d[1];data[0]=l>>24&0xff;data[1]=l>>16&0xff;data[2]=l>>8&0xff;data[3]=l&0xff;data[4]=r>>24&0xff;data[5]=r>>16&0xf
f;data[6]=r>>8&0xff;data[7]=r&0xff;for(j=0;j<8;j++)data[j]^=iv[j];iv-=8;data-=8;}l=data[0]<<24|data[1]<<16|data[2]<<8|data[3];r=data[4]<<24|data[5]<<16|data[6]<<8|data[7];d[0]=l;d[1]=r;Blowfish_decipher(c,d);l=d[0];r=d[1];data[0]=l>>24&0xff;data[1]=l>>16
&0xff;data[2]=l>>8&0xff;data[3]=l&0xff;data[4]=r>>24&0xff;data[5]=r>>16&0xff;data[6]=r>>8&0xff;data[7]=r&0xff;for(j=0;j<8;j++)data[j]^=iva[j];}#include<sys/types.h>#include<crypto/cast.h>#include<crypto/castsb.h>#defineU_INT8_Ta(x)((u_int8_t)(x>>24))#def
ineU_INT8_Tb(x)((u_int8_t)((x>>16)&255))#defineU_INT8_Tc(x)((u_int8_t)((x>>8)&255))#defineU_INT8_Td(x)((u_int8_t)((x)&255))#defineROL(x,n)(((x)<<(n))|((x)>>(32-(n))))#defineF1(l,r,i)\t=ROL(key->xkey[i]+r,key->xkey[i+16]);\l^=((cast_sbox1[U_INT8_Ta(t)]^ca
st_sbox2[U_INT8_Tb(t)])-\cast_sbox3[U_INT8_Tc(t)])+cast_sbox4[U_INT8_Td(t)];#defineF2(l,r,i)\t=ROL(key->xkey[i]^r,key->xkey[i+16]);\l^=((cast_sbox1[U_INT8_Ta(t)]-cast_sbox2[U_INT8_Tb(t)])+\cast_sbox3[U_INT8_Tc(t)])^cast_sbox4[U_INT8_Td(t)];#defineF3(l,r,
i)\t=ROL(key->xkey[i]-r,key->xkey[i+16]);\l^=((cast_sbox1[U_INT8_Ta(t)]+cast_sbox2[U_INT8_Tb(t)])^\cast_sbox3[U_INT8_Tc(t)])-cast_sbox4[U_INT8_Td(t)];voidcast_encrypt(cast_key*key,u_int8_t*inblock,u_int8_t*outblock){u_int32_tt,l,r;l=((u_int32_t)inblock[0
]<<24)|((u_int32_t)inblock[1]<<16)|((u_int32_t)inblock[2]<<8)|(u_int32_t)inblock[3];r=((u_int32_t)inblock[4]<<24)|((u_int32_t)inblock[5]<<16)|((u_int32_t)inblock[6]<<8)|(u_int32_t)inblock[7];F1(l,r,0);F2(r,l,1);F3(l,r,2);F1(r,l,3);F2(l,r,4);F3(r,l,5);F1(
l,r,6);F2(r,l,7);F3(l,r,8);F1(r,l,9);F2(l,r,10);F3(r,l,11);if(key->rounds>12){F1(l,r,12);F2(r,l,13);F3(l,r,14);F1(r,l,15);}outblock[0]=U_INT8_Ta(r);outblock[1]=U_INT8_Tb(r);outblock[2]=U_INT8_Tc(r);outblock[3]=U_INT8_Td(r);outblock[4]=U_INT8_Ta(l);outblo
ck[5]=U_INT8_Tb(l);outblock[6]=U_INT8_Tc(l);outblock[7]=U_INT8_Td(l);t=l=r=0;}voidcast_decrypt(cast_key*key,u_int8_t*inblock,u_int8_t*outblock){u_int32_tt,l,r;r=((u_int32_t)inblock[0]<<24)|((u_int32_t)inblock[1]<<16)|((u_int32_t)inblock[2]<<8)|(u_int32_t
)inblock[3];l=((u_int32_t)inblock[4]<<24)|((u_int32_t)inblock[5]<<16)|((u_int32_t)inblock[6]<<8)|(u_int32_t)inblock[7];if(key->rounds>12){F1(r,l,15);F3(l,r,14);F2(r,l,13);F1(l,r,12);}F3(r,l,11);F2(l,r,10);F1(r,l,9);F3(l,r,8);F2(r,l,7);F1(l,r,6);F3(r,l,5)
;F2(l,r,4);F1(r,l,3);F3(l,r,2);F2(r,l,1);F1(l,r,0);outblock[0]=U_INT8_Ta(l);outblock[1]=U_INT8_Tb(l);outblock[2]=U_INT8_Tc(l);outblock[3]=U_INT8_Td(l);outblock[4]=U_INT8_Ta(r);outblock[5]=U_INT8_Tb(r);outblock[6]=U_INT8_Tc(r);outblock[7]=U_INT8_Td(r);t=l
=r=0;}voidcast_setkey(cast_key*key,u_int8_t*rawkey,intkeybytes){u_int32_tt[4],z[4],x[4];inti;key->rounds=(keybytes<=10?12:16);for(i=0;i<4;i++){x[i]=0;if((i*4+0)<keybytes)x[i]=(u_int32_t)rawkey[i*4+0]<<24;if((i*4+1)<keybytes)x[i]|=(u_int32_t)rawkey[i*4+1]
<<16;if((i*4+2)<keybytes)x[i]|=(u_int32_t)rawkey[i*4+2]<<8;if((i*4+3)<keybytes)x[i]|=(u_int32_t)rawkey[i*4+3];}for(i=0;i<32;i+=4){switch(i&4){case0:t[0]=z[0]=x[0]^cast_sbox5[U_INT8_Tb(x[3])]^cast_sbox6[U_INT8_Td(x[3])]^cast_sbox7[U_INT8_Ta(x[3])]^cast_sb
ox8[U_INT8_Tc(x[3])]^cast_sbox7[U_INT8_Ta(x[2])];t[1]=z[1]=x[2]^cast_sbox5[U_INT8_Ta(z[0])]^cast_sbox6[U_INT8_Tc(z[0])]^cast_sbox7[U_INT8_Tb(z[0])]^cast_sbox8[U_INT8_Td(z[0])]^cast_sbox8[U_INT8_Tc(x[2])];t[2]=z[2]=x[3]^cast_sbox5[U_INT8_Td(z[1])]^cast_sb
ox6[U_INT8_Tc(z[1])]^cast_sbox7[U_INT8_Tb(z[1])]^cast_sbox8[U_INT8_Ta(z[1])]^cast_sbox5[U_INT8_Tb(x[2])];t[3]=z[3]=x[1]^cast_sbox5[U_INT8_Tc(z[2])]^cast_sbox6[U_INT8_Tb(z[2])]^cast_sbox7[U_INT8_Td(z[2])]^cast_sbox8[U_INT8_Ta(z[2])]^cast_sbox6[U_INT8_Td(x
[2])];break;case4:t[0]=x[0]=z[2]^cast_sbox5[U_INT8_Tb(z[1])]^cast_sbox6[U_INT8_Td(z[1])]^cast_sbox7[U_INT8_Ta(z[1])]^cast_sbox8[U_INT8_Tc(z[1])]^cast_sbox7[U_INT8_Ta(z[0])];t[1]=x[1]=z[0]^cast_sbox5[U_INT8_Ta(x[0])]^cast_sbox6[U_INT8_Tc(x[0])]^cast_sbox7
[U_INT8_Tb(x[0])]^cast_sbox8[U_INT8_Td(x[0])]^cast_sbox8[U_INT8_Tc(z[0])];t[2]=x[2]=z[1]^cast_sbox5[U_INT8_Td(x[1])]^cast_sbox6[U_INT8_Tc(x[1])]^cast_sbox7[U_INT8_Tb(x[1])]^cast_sbox8[U_INT8_Ta(x[1])]^cast_sbox5[U_INT8_Tb(z[0])];t[3]=x[3]=z[3]^cast_sbox5
[U_INT8_Tc(x[2])]^cast_sbox6[U_INT8_Tb(x[2])]^cast_sbox7[U_INT8_Td(x[2])]^cast_sbox8[U_INT8_Ta(x[2])]^cast_sbox6[U_INT8_Td(z[0])];break;}switch(i&12){case0:case12:key->xkey[i+0]=cast_sbox5[U_INT8_Ta(t[2])]^cast_sbox6[U_INT8_Tb(t[2])]^cast_sbox7[U_INT8_Td
(t[1])]^cast_sbox8[U_INT8_Tc(t[1])];key->xkey[i+1]=cast_sbox5[U_INT8_Tc(t[2])]^cast_sbox6[U_INT8_Td(t[2])]^cast_sbox7[U_INT8_Tb(t[1])]^cast_sbox8[U_INT8_Ta(t[1])];key->xkey[i+2]=cast_sbox5[U_INT8_Ta(t[3])]^cast_sbox6[U_INT8_Tb(t[3])]^cast_sbox7[U_INT8_Td
(t[0])]^cast_sbox8[U_INT8_Tc(t[0])];key->xkey[i+3]=cast_sbox5[U_INT8_Tc(t[3])]^cast_sbox6[U_INT8_Td(t[3])]^cast_sbox7[U_INT8_Tb(t[0])]^cast_sbox8[U_INT8_Ta(t[0])];break;case4:case8:key->xkey[i+0]=cast_sbox5[U_INT8_Td(t[0])]^cast_sbox6[U_INT8_Tc(t[0])]^ca
st_sbox7[U_INT8_Ta(t[3])]^cast_sbox8[U_INT8_Tb(t[3])];key->xkey[i+1]=cast_sbox5[U_INT8_Tb(t[0])]^cast_sbox6[U_INT8_Ta(t[0])]^cast_sbox7[U_INT8_Tc(t[3])]^cast_sbox8[U_INT8_Td(t[3])];key->xkey[i+2]=cast_sbox5[U_INT8_Td(t[1])]^cast_sbox6[U_INT8_Tc(t[1])]^ca
st_sbox7[U_INT8_Ta(t[2])]^cast_sbox8[U_INT8_Tb(t[2])];key->xkey[i+3]=cast_sbox5[U_INT8_Tb(t[1])]^cast_sbox6[U_INT8_Ta(t[1])]^cast_sbox7[U_INT8_Tc(t[2])]^cast_sbox8[U_INT8_Td(t[2])];break;}switch(i&12){case0:key->xkey[i+0]^=cast_sbox5[U_INT8_Tc(z[0])];key
->xkey[i+1]^=cast_sbox6[U_INT8_Tc(z[1])];key->xkey[i+2]^=cast_sbox7[U_INT8_Tb(z[2])];key->xkey[i+3]^=cast_sbox8[U_INT8_Ta(z[3])];break;case4:key->xkey[i+0]^=cast_sbox5[U_INT8_Ta(x[2])];key->xkey[i+1]^=cast_sbox6[U_INT8_Tb(x[3])];key->xkey[i+2]^=cast_sbox
7[U_INT8_Td(x[0])];key->xkey[i+3]^=cast_sbox8[U_INT8_Td(x[1])];break;case8:key->xkey[i+0]^=cast_sbox5[U_INT8_Tb(z[2])];key->xkey[i+1]^=cast_sbox6[U_INT8_Ta(z[3])];key->xkey[i+2]^=cast_sbox7[U_INT8_Tc(z[0])];key->xkey[i+3]^=cast_sbox8[U_INT8_Tc(z[1])];bre
ak;case12:key->xkey[i+0]^=cast_sbox5[U_INT8_Td(x[0])];key->xkey[i+1]^=cast_sbox6[U_INT8_Td(x[1])];key->xkey[i+2]^=cast_sbox7[U_INT8_Ta(x[2])];key->xkey[i+3]^=cast_sbox8[U_INT8_Tb(x[3])];break;}if(i>=16){key->xkey[i+0]&=31;key->xkey[i+1]&=31;key->xkey[i+2
]&=31;key->xkey[i+3]&=31;}}for(i=0;i<4;i++){t[i]=x[i]=z[i]=0;}}#include<sys/param.h>#include<sys/systm.h>#include<sys/malloc.h>#include<sys/mbuf.h>#include<sys/sysctl.h>#include<sys/errno.h>#include<sys/md5k.h>#include<dev/rndvar.h>#include<crypto/sha1.h
>#include<crypto/rmd160.h>#include<crypto/cast.h>#include<crypto/skipjack.h>#include<crypto/blf.h>#include<crypto/crypto.h>#include<crypto/xform.h>structcryptocap*crypto_drivers=NULL;intcrypto_drivers_num=0;structcryptop*cryptop_queue=NULL;structcryptode
sc*cryptodesc_queue=NULL;intcrypto_queue_num=0;intcrypto_queue_max=CRYPTO_MAX_CACHED;structcryptop*crp_req_queue=NULL;structcryptop**crp_req_queue_tail=NULL;intcrypto_newsession(u_int64_t*sid,structcryptoini*cri){structcryptoini*cr;u_int32_thid,lid;inter
r;if(crypto_drivers==NULL)returnEINVAL;for(hid=0;hid<crypto_drivers_num;hid++){if((crypto_drivers[hid].cc_newsession==NULL)||(crypto_drivers[hid].cc_flags&CRYPTOCAP_F_CLEANUP))continue;for(cr=cri;cr;cr=cr->cri_next)if(crypto_drivers[hid].cc_alg[cr->cri_a
lg]==0)break;if(cr==NULL)break;}if(hid==crypto_drivers_num)returnEINVAL;lid=hid;err=crypto_drivers[hid].cc_newsession(&lid,cri);if(err==0){(*sid)=hid;(*sid)<<=32;(*sid)|=(lid&0xffffffff);crypto_drivers[hid].cc_sessions++;}returnerr;}intcrypto_freesession
(u_int64_tsid){u_int32_thid;interr=0;if(crypto_drivers==NULL)returnEINVAL;hid=(sid>>32)&0xffffffff;if(hid>=crypto_drivers_num)returnENOENT;if(crypto_drivers[hid].cc_sessions)crypto_drivers[hid].cc_sessions--;if(crypto_drivers[hid].cc_freesession)err=cryp
to_drivers[hid].cc_freesession(sid);if((crypto_drivers[hid].cc_flags&CRYPTOCAP_F_CLEANUP)&&(crypto_drivers[hid].cc_sessions==0))bzero(&crypto_drivers[hid],sizeof(structcryptocap));returnerr;}int32_tcrypto_get_driverid(void){structcryptocap*newdrv;inti;if
(crypto_drivers_num==0){crypto_drivers_num=CRYPTO_DRIVERS_INITIAL;crypto_drivers=malloc(crypto_drivers_num*sizeof(structcryptocap),M_XDATA,M_NOWAIT);if(crypto_drivers==NULL){crypto_drivers_num=0;return-1;}bzero(crypto_drivers,crypto_drivers_num*sizeof(st
ructcryptocap));}for(i=0;i<crypto_drivers_num;i++)if((crypto_drivers[i].cc_process==NULL)&&!(crypto_drivers[i].cc_flags&CRYPTOCAP_F_CLEANUP)&&(crypto_drivers[i].cc_sessions==0))returni;if(i==crypto_drivers_num){if(2*crypto_drivers_num<=crypto_drivers_num
)return-1;newdrv=malloc(2*crypto_drivers_num*sizeof(structcryptocap),M_XDATA,M_NOWAIT);if(newdrv==NULL)return-1;bcopy(crypto_drivers,newdrv,crypto_drivers_num*sizeof(structcryptocap));bzero(&newdrv[crypto_drivers_num],crypto_drivers_num*sizeof(structcryp
tocap));crypto_drivers_num*=2;returni;}return-1;}intcrypto_register(u_int32_tdriverid,intalg,int(*newses)(u_int32_t*,structcryptoini*),int(*freeses)(u_int64_t),int(*process)(structcryptop*)){if((driverid>=crypto_drivers_num)||(alg<=0)||(alg>CRYPTO_ALGORI
THM_MAX)||(crypto_drivers==NULL))returnEINVAL;crypto_drivers[driverid].cc_alg[alg]=1;if(crypto_drivers[driverid].cc_process==NULL){crypto_drivers[driverid].cc_newsession=newses;crypto_drivers[driverid].cc_process=process;crypto_drivers[driverid].cc_frees
ession=freeses;}return0;}intcrypto_unregister(u_int32_tdriverid,intalg){u_int32_tses;inti;if((driverid>=crypto_drivers_num)||(alg<=0)||(alg>CRYPTO_ALGORITHM_MAX)||(crypto_drivers==NULL)||(crypto_drivers[driverid].cc_alg[alg]==0))returnEINVAL;crypto_drive
rs[driverid].cc_alg[alg]=0;for(i=1;i<=CRYPTO_ALGORITHM_MAX;i++)if(crypto_drivers[driverid].cc_alg[i]!=0)break;if(i==CRYPTO_ALGORITHM_MAX+1){ses=crypto_drivers[driverid].cc_sessions;bzero(&crypto_drivers[driverid],sizeof(structcryptocap));if(ses!=0){crypt
o_drivers[driverid].cc_flags|=CRYPTOCAP_F_CLEANUP;crypto_drivers[driverid].cc_sessions=ses;}}return0;}intcrypto_dispatch(structcryptop*crp){ints=splhigh();if(crp_req_queue==NULL){crp_req_queue=crp;crp_req_queue_tail=&(crp->crp_next);wakeup((caddr_t)&crp_
req_queue);}else{*crp_req_queue_tail=crp;crp_req_queue_tail=&(crp->crp_next);}splx(s);return0;}intcrypto_invoke(structcryptop*crp){structcryptodesc*crd;u_int64_tnid;u_int32_thid;if((crp==NULL)||(crp->crp_callback==NULL))returnEINVAL;if((crp->crp_desc==NU
LL)||(crypto_drivers==NULL)){crp->crp_etype=EINVAL;crypto_done(crp);return0;}hid=(crp->crp_sid>>32)&0xffffffff;if(hid>=crypto_drivers_num){for(crd=crp->crp_desc;crd->crd_next;crd=crd->crd_next)crd->CRD_INI.cri_next=&(crd->crd_next->CRD_INI);if(crypto_new
session(&nid,&(crp->crp_desc->CRD_INI))==0)crp->crp_sid=nid;crp->crp_etype=EAGAIN;crypto_done(crp);return0;}if(crypto_drivers[hid].cc_flags&CRYPTOCAP_F_CLEANUP)crypto_freesession(crp->crp_sid);if(crypto_drivers[hid].cc_process==NULL){for(crd=crp->crp_des
c;crd->crd_next;crd=crd->crd_next)crd->CRD_INI.cri_next=&(crd->crd_next->CRD_INI);if(crypto_newsession(&nid,&(crp->crp_desc->CRD_INI))==0)crp->crp_sid=nid;crp->crp_etype=EAGAIN;crypto_done(crp);return0;}crypto_drivers[hid].cc_process(crp);return0;}voidcr
ypto_freereq(structcryptop*crp){structcryptodesc*crd;ints;if(crp==NULL)return;s=splhigh();while((crd=crp->crp_desc)!=NULL){crp->crp_desc=crd->crd_next;if(crypto_queue_num+1>crypto_queue_max)FREE(crd,M_XDATA);else{crd->crd_next=cryptodesc_queue;cryptodesc
_queue=crd;crypto_queue_num++;}}if(crypto_queue_num+1>crypto_queue_max)FREE(crp,M_XDATA);else{crp->crp_next=cryptop_queue;cryptop_queue=crp;crypto_queue_num++;}splx(s);}structcryptop*crypto_getreq(intnum){structcryptodesc*crd;structcryptop*crp;ints=splhi
gh();if(cryptop_queue==NULL){MALLOC(crp,structcryptop*,sizeof(structcryptop),M_XDATA,M_NOWAIT);if(crp==NULL){splx(s);returnNULL;}}else{crp=cryptop_queue;cryptop_queue=crp->crp_next;crypto_queue_num--;}bzero(crp,sizeof(structcryptop));while(num--){if(cryp
todesc_queue==NULL){MALLOC(crd,structcryptodesc*,sizeof(structcryptodesc),M_XDATA,M_NOWAIT);if(crd==NULL){splx(s);crypto_freereq(crp);returnNULL;}}else{crd=cryptodesc_queue;cryptodesc_queue=crd->crd_next;crypto_queue_num--;}bzero(crd,sizeof(structcryptod
esc));crd->crd_next=crp->crp_desc;crp->crp_desc=crd;}splx(s);returncrp;}voidcrypto_thread(void){structcryptop*crp;ints;s=splhigh();for(;;){crp=crp_req_queue;if(crp==NULL){(void)tsleep(&crp_req_queue,PLOCK,"crypto_wait",0);continue;}crp_req_queue=crp->crp
_next;splx(s);crypto_invoke(crp);s=splhigh();}}voidcrypto_done(structcryptop*crp){crp->crp_callback(crp);}#include<sys/param.h>#include<sys/systm.h>#include<sys/malloc.h>#include<sys/mbuf.h>#include<sys/sysctl.h>#include<sys/errno.h>#include<sys/md5k.h>#
include<dev/rndvar.h>#include<crypto/sha1.h>#include<crypto/rmd160.h>#include<crypto/cast.h>#include<crypto/skipjack.h>#include<crypto/blf.h>#include<crypto/crypto.h>#include<crypto/cryptosoft.h>#include<crypto/xform.h>u_int8_thmac_ipad_buffer[64]={0x36,
0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36
,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36};u_int8_thmac_opad_buffer[64]={0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x
5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C,0x5C};structswcr_data**swcr_sessions=NULL;u_int32_tswcr_sesnum=0;int32_tswcr_id=-1;intswcr_encdec(str
uctcryptodesc*crd,structswcr_data*sw,caddr_tbuf,intouttype){unsignedchariv[EALG_MAX_BLOCK_LEN],blk[EALG_MAX_BLOCK_LEN],*idat;unsignedchar*ivp,piv[EALG_MAX_BLOCK_LEN];structenc_xform*exf;inti,k,j,blks;structmbuf*m;exf=sw->sw_exf;blks=exf->blocksize;if(crd
->crd_len%blks)returnEINVAL;if(outtype==CRYPTO_BUF_CONTIG){if(crd->crd_flags&CRD_F_ENCRYPT){if(crd->crd_flags&CRD_F_IV_EXPLICIT)bcopy(crd->crd_iv,sw->sw_iv,blks);if(!(crd->crd_flags&CRD_F_IV_PRESENT))bcopy(sw->sw_iv,buf+crd->crd_inject,blks);for(i=crd->c
rd_skip;i<crd->crd_skip+crd->crd_len;i+=blks){if(i==crd->crd_skip)for(k=0;k<blks;k++)buf[i+k]^=sw->sw_iv[k];elsefor(k=0;k<blks;k++)buf[i+k]^=buf[i+k-blks];exf->encrypt(sw->sw_kschedule,buf+i);}bcopy(buf+crd->crd_len-blks,sw->sw_iv,blks);}else{if(crd->crd
_flags&CRD_F_IV_EXPLICIT)bcopy(crd->crd_iv,sw->sw_iv,blks);elsebcopy(buf+crd->crd_inject,sw->sw_iv,blks);for(i=crd->crd_skip+crd->crd_len-blks;i>=crd->crd_skip;i-=blks){exf->decrypt(sw->sw_kschedule,buf+i);if(i==crd->crd_skip)for(k=0;k<blks;k++)buf[i+k]^
=sw->sw_iv[k];elsefor(k=0;k<blks;k++)buf[i+k]^=buf[i+k-blks];}}return0;}else{m=(structmbuf*)buf;if(crd->crd_flags&CRD_F_ENCRYPT){if(crd->crd_flags&CRD_F_IV_EXPLICIT)bcopy(crd->crd_iv,iv,blks);elsebcopy(sw->sw_iv,iv,blks);if(!(crd->crd_flags&CRD_F_IV_PRES
ENT))m_copyback(m,crd->crd_inject,blks,iv);}else{if(crd->crd_flags&CRD_F_IV_EXPLICIT)bcopy(crd->crd_iv,iv,blks);elsem_copydata(m,crd->crd_inject,blks,iv);}ivp=iv;m=m_getptr(m,crd->crd_skip,&k);if(m==NULL)returnEINVAL;i=crd->crd_len;while(i>0){if((m->m_le
n<k+blks)&&(m->m_len!=k)){m_copydata(m,k,blks,blk);if(crd->crd_flags&CRD_F_ENCRYPT){for(j=0;j<blks;j++)blk[j]^=ivp[j];exf->encrypt(sw->sw_kschedule,blk);bcopy(blk,iv,blks);ivp=iv;}else{if(ivp==iv)bcopy(blk,piv,blks);elsebcopy(blk,iv,blks);exf->decrypt(sw
->sw_kschedule,blk);for(j=0;j<blks;j++)blk[j]^=ivp[j];if(ivp==iv)bcopy(piv,iv,blks);elseivp=iv;}m_copyback(m,k,blks,blk);m=m_getptr(m,k+blks,&k);if(m==NULL)returnEINVAL;i-=blks;if(i==0)break;}if(k==m->m_len){for(m=m->m_next;m&&m->m_len==0;m=m->m_next);k=
0;}if(m==NULL)returnEINVAL;idat=mtod(m,unsignedchar*)+k;while((m->m_len>=k+blks)&&(i>0)){if(crd->crd_flags&CRD_F_ENCRYPT){for(j=0;j<blks;j++)idat[j]^=ivp[j];exf->encrypt(sw->sw_kschedule,idat);ivp=idat;}else{if(ivp==iv)bcopy(idat,piv,blks);elsebcopy(idat
,iv,blks);exf->decrypt(sw->sw_kschedule,idat);for(j=0;j<blks;j++)idat[j]^=ivp[j];if(ivp==iv)bcopy(piv,iv,blks);elseivp=iv;}idat+=blks;k+=blks;i-=blks;}}if(crd->crd_flags&CRD_F_ENCRYPT)bcopy(ivp,sw->sw_iv,blks);return0;}returnEINVAL;}intswcr_authcompute(s
tructcryptodesc*crd,structswcr_data*sw,caddr_tbuf,intouttype){unsignedcharaalg[AALG_MAX_RESULT_LEN];structauth_hash*axf;unionauthctxctx;interr;if(sw->sw_ictx==0)returnEINVAL;axf=sw->sw_axf;bcopy(sw->sw_ictx,&ctx,axf->ctxsize);if(outtype==CRYPTO_BUF_CONTI
G)axf->Update(&ctx,buf+crd->crd_skip,crd->crd_len);else{err=m_apply((structmbuf*)buf,crd->crd_skip,crd->crd_len,(int(*)(caddr_t,caddr_t,unsignedint))axf->Update,(caddr_t)&ctx);if(err)returnerr;}switch(sw->sw_alg){caseCRYPTO_MD5_HMAC:caseCRYPTO_SHA1_HMAC:
caseCRYPTO_RIPEMD160_HMAC:if(sw->sw_octx==NULL)returnEINVAL;axf->Final(aalg,&ctx);bcopy(sw->sw_octx,&ctx,axf->ctxsize);axf->Update(&ctx,aalg,axf->hashsize);axf->Final(aalg,&ctx);break;caseCRYPTO_MD5_KPDK:caseCRYPTO_SHA1_KPDK:if(sw->sw_octx==NULL)returnEI
NVAL;axf->Update(&ctx,sw->sw_octx,sw->sw_klen);axf->Final(aalg,&ctx);break;}if(outtype==CRYPTO_BUF_CONTIG)bcopy(aalg,buf+crd->crd_inject,axf->authsize);elsem_copyback((structmbuf*)buf,crd->crd_inject,axf->authsize,aalg);return0;}intswcr_newsession(u_int3
2_t*sid,structcryptoini*cri){structswcr_data**swd;structauth_hash*axf;structenc_xform*txf;u_int32_ti;intk;if((sid==NULL)||(cri==NULL))returnEINVAL;if(swcr_sessions)for(i=1;i<swcr_sesnum;i++)if(swcr_sessions[i]==NULL)break;if((swcr_sessions==NULL)||(i==sw
cr_sesnum)){if(swcr_sessions==NULL){i=1;swcr_sesnum=CRYPTO_SW_SESSIONS;}elseswcr_sesnum*=2;swd=malloc(swcr_sesnum*sizeof(structswcr_data*),M_XDATA,M_NOWAIT);if(swd==NULL){if(swcr_sesnum==CRYPTO_SW_SESSIONS)swcr_sesnum=0;elseswcr_sesnum/=2;returnENOBUFS;}
bzero(swd,swcr_sesnum*sizeof(structswcr_data*));if(swcr_sessions){bcopy(swcr_sessions,swd,(swcr_sesnum/2)*sizeof(structswcr_data*));free(swcr_sessions,M_XDATA);}swcr_sessions=swd;}swd=&swcr_sessions[i];*sid=i;while(cri){MALLOC(*swd,structswcr_data*,sizeo
f(structswcr_data),M_XDATA,M_NOWAIT);if(*swd==NULL){swcr_freesession(i);returnENOBUFS;}bzero(*swd,sizeof(structswcr_data));switch(cri->cri_alg){caseCRYPTO_DES_CBC:txf=&enc_xform_des;gotoenccommon;caseCRYPTO_3DES_CBC:txf=&enc_xform_3des;gotoenccommon;case
CRYPTO_BLF_CBC:txf=&enc_xform_blf;gotoenccommon;caseCRYPTO_CAST_CBC:txf=&enc_xform_cast5;gotoenccommon;caseCRYPTO_SKIPJACK_CBC:txf=&enc_xform_skipjack;gotoenccommon;caseCRYPTO_RIJNDAEL128_CBC:txf=&enc_xform_rijndael128;gotoenccommon;enccommon:txf->setkey
(&((*swd)->sw_kschedule),cri->cri_key,cri->cri_klen/8);(*swd)->sw_iv=malloc(txf->blocksize,M_XDATA,M_NOWAIT);if((*swd)->sw_iv==NULL){swcr_freesession(i);returnENOBUFS;}(*swd)->sw_exf=txf;get_random_bytes((*swd)->sw_iv,txf->blocksize);break;caseCRYPTO_MD5
_HMAC:axf=&auth_hash_hmac_md5_96;gotoauthcommon;caseCRYPTO_SHA1_HMAC:axf=&auth_hash_hmac_sha1_96;gotoauthcommon;caseCRYPTO_RIPEMD160_HMAC:axf=&auth_hash_hmac_ripemd_160_96;authcommon:(*swd)->sw_ictx=malloc(axf->ctxsize,M_XDATA,M_NOWAIT);if((*swd)->sw_ict
x==NULL){swcr_freesession(i);returnENOBUFS;}(*swd)->sw_octx=malloc(axf->ctxsize,M_XDATA,M_NOWAIT);if((*swd)->sw_octx==NULL){swcr_freesession(i);returnENOBUFS;}for(k=0;k<cri->cri_klen/8;k++)cri->cri_key[k]^=HMAC_IPAD_VAL;axf->Init((*swd)->sw_ictx);axf->Up
date((*swd)->sw_ictx,cri->cri_key,cri->cri_klen/8);axf->Update((*swd)->sw_ictx,hmac_ipad_buffer,HMAC_BLOCK_LEN-(cri->cri_klen/8));for(k=0;k<cri->cri_klen/8;k++)cri->cri_key[k]^=(HMAC_IPAD_VAL^HMAC_OPAD_VAL);axf->Init((*swd)->sw_octx);axf->Update((*swd)->
sw_octx,cri->cri_key,cri->cri_klen/8);axf->Update((*swd)->sw_octx,hmac_opad_buffer,HMAC_BLOCK_LEN-(cri->cri_klen/8));for(k=0;k<cri->cri_klen/8;k++)cri->cri_key[k]^=HMAC_OPAD_VAL;(*swd)->sw_axf=axf;break;caseCRYPTO_MD5_KPDK:axf=&auth_hash_key_md5;gotoauth
2common;caseCRYPTO_SHA1_KPDK:axf=&auth_hash_key_sha1;auth2common:(*swd)->sw_ictx=malloc(axf->ctxsize,M_XDATA,M_NOWAIT);if((*swd)->sw_ictx==NULL){swcr_freesession(i);returnENOBUFS;}(*swd)->sw_octx=malloc(cri->cri_klen/8,M_XDATA,M_NOWAIT);if((*swd)->sw_oct
x==NULL){swcr_freesession(i);returnENOBUFS;}(*swd)->sw_klen=cri->cri_klen/8;bcopy(cri->cri_key,(*swd)->sw_octx,cri->cri_klen/8);axf->Init((*swd)->sw_ictx);axf->Update((*swd)->sw_ictx,cri->cri_key,cri->cri_klen/8);axf->Final(NULL,(*swd)->sw_ictx);(*swd)->
sw_axf=axf;break;default:swcr_freesession(i);returnEINVAL;}(*swd)->sw_alg=cri->cri_alg;cri=cri->cri_next;swd=&((*swd)->sw_next);}return0;}intswcr_freesession(u_int64_ttid){structswcr_data*swd;structenc_xform*txf;structauth_hash*axf;u_int32_tsid=((u_int32
_t)tid)&0xffffffff;if((sid>swcr_sesnum)||(swcr_sessions==NULL)||(swcr_sessions[sid]==NULL))returnEINVAL;if(sid==0)return0;while((swd=swcr_sessions[sid])!=NULL){swcr_sessions[sid]=swd->sw_next;switch(swd->sw_alg){caseCRYPTO_DES_CBC:caseCRYPTO_3DES_CBC:cas
eCRYPTO_BLF_CBC:caseCRYPTO_CAST_CBC:caseCRYPTO_SKIPJACK_CBC:caseCRYPTO_RIJNDAEL128_CBC:txf=swd->sw_exf;if(swd->sw_kschedule)txf->zerokey(&(swd->sw_kschedule));if(swd->sw_iv)free(swd->sw_iv,M_XDATA);break;caseCRYPTO_MD5_HMAC:caseCRYPTO_SHA1_HMAC:caseCRYPT
O_RIPEMD160_HMAC:axf=swd->sw_axf;if(swd->sw_ictx){bzero(swd->sw_ictx,axf->ctxsize);free(swd->sw_ictx,M_XDATA);}if(swd->sw_octx){bzero(swd->sw_octx,axf->ctxsize);free(swd->sw_octx,M_XDATA);}break;caseCRYPTO_MD5_KPDK:caseCRYPTO_SHA1_KPDK:axf=swd->sw_axf;if
(swd->sw_ictx){bzero(swd->sw_ictx,axf->ctxsize);free(swd->sw_ictx,M_XDATA);}if(swd->sw_octx){bzero(swd->sw_octx,swd->sw_klen);free(swd->sw_octx,M_XDATA);}break;}FREE(swd,M_XDATA);}return0;}intswcr_process(structcryptop*crp){structcryptodesc*crd;structswc
r_data*sw;u_int32_tlid;u_int64_tnid;inttype;if(crp==NULL)returnEINVAL;if((crp->crp_desc==NULL)||(crp->crp_buf==NULL)){crp->crp_etype=EINVAL;gotodone;}lid=crp->crp_sid&0xffffffff;if((lid>=swcr_sesnum)||(lid==0)||(swcr_sessions[lid]==NULL)){crp->crp_etype=
ENOENT;gotodone;}if(crp->crp_flags&CRYPTO_F_IMBUF)type=CRYPTO_BUF_MBUF;elsetype=CRYPTO_BUF_CONTIG;for(crd=crp->crp_desc;crd;crd=crd->crd_next){for(sw=swcr_sessions[lid];sw&&sw->sw_alg!=crd->crd_alg;sw=sw->sw_next);if(sw==NULL){crp->crp_etype=EINVAL;gotod
one;}switch(sw->sw_alg){caseCRYPTO_DES_CBC:caseCRYPTO_3DES_CBC:caseCRYPTO_BLF_CBC:caseCRYPTO_CAST_CBC:caseCRYPTO_SKIPJACK_CBC:caseCRYPTO_RIJNDAEL128_CBC:if((crp->crp_etype=swcr_encdec(crd,sw,crp->crp_buf,type))!=0)gotodone;break;caseCRYPTO_MD5_HMAC:caseC
RYPTO_SHA1_HMAC:caseCRYPTO_RIPEMD160_HMAC:caseCRYPTO_MD5_KPDK:caseCRYPTO_SHA1_KPDK:if((crp->crp_etype=swcr_authcompute(crd,sw,crp->crp_buf,type))!=0)gotodone;break;default:crp->crp_etype=EINVAL;gotodone;}}done:if(crp->crp_etype==ENOENT){crypto_freesessio
n(crp->crp_sid);for(crd=crp->crp_desc;crd->crd_next;crd=crd->crd_next)crd->CRD_INI.cri_next=&(crd->crd_next->CRD_INI);if(crypto_newsession(&nid,&(crp->crp_desc->CRD_INI))==0)crp->crp_sid=nid;}crypto_done(crp);return0;}voidswcr_init(void){swcr_id=crypto_g
et_driverid();if(swcr_id>=0){crypto_register(swcr_id,CRYPTO_DES_CBC,swcr_newsession,swcr_freesession,swcr_process);crypto_register(swcr_id,CRYPTO_3DES_CBC,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_BLF_CBC,NULL,NULL,NULL);crypto_register(swcr_id,CRYP
TO_CAST_CBC,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_SKIPJACK_CBC,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_MD5_HMAC,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_SHA1_HMAC,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_RIPEMD160_HMAC,NULL,NU
LL,NULL);crypto_register(swcr_id,CRYPTO_MD5_KPDK,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_SHA1_KPDK,NULL,NULL,NULL);crypto_register(swcr_id,CRYPTO_RIJNDAEL128_CBC,NULL,NULL,NULL);return;}panic("Softwarecryptodevicecannotinitialize!");}#include"des_
locl.h"voiddes_ecb3_encrypt(input,output,ks1,ks2,ks3,encrypt)des_cblock(*input);des_cblock(*output);des_key_scheduleks1;des_key_scheduleks2;des_key_scheduleks3;intencrypt;{registerunsignedlongl0,l1;registerunsignedchar*in,*out;unsignedlongll[2];in=(unsig
nedchar*)input;out=(unsignedchar*)output;c2l(in,l0);c2l(in,l1);IP(l0,l1);ll[0]=l0;ll[1]=l1;des_encrypt2(ll,ks1,encrypt);des_encrypt2(ll,ks2,!encrypt);des_encrypt2(ll,ks3,encrypt);l0=ll[0];l1=ll[1];FP(l1,l0);l2c(l0,out);l2c(l1,out);}#include"des_locl.h"#i
nclude"spr.h"constchar*DES_version="libdesv3.21-95/11/21-eay";voiddes_ecb_encrypt(input,output,ks,encrypt)des_cblock(*input);des_cblock(*output);des_key_scheduleks;intencrypt;{registerunsignedlongl0,l1;registerunsignedchar*in,*out;unsignedlongll[2];in=(u
nsignedchar*)input;out=(unsignedchar*)output;c2l(in,l0);ll[0]=l0;c2l(in,l1);ll[1]=l1;des_encrypt(ll,ks,encrypt);l0=ll[0];l2c(l0,out);l1=ll[1];l2c(l1,out);l0=l1=ll[0]=ll[1]=0;}voiddes_encrypt(data,ks,encrypt)unsignedlong*data;des_key_scheduleks;intencrypt
;{registerunsignedlongl,r,t,u;#ifdefDES_USE_PTRregisterunsignedchar*des_SP=(unsignedchar*)des_SPtrans;#endif#ifdefMSDOSunionfudge{unsignedlongl;unsignedshorts[2];unsignedcharc[4];}U,T;#endifregisterinti;registerunsignedlong*s;u=data[0];r=data[1];IP(u,r);
l=(r<<1)|(r>>31);r=(u<<1)|(u>>31);l&=0xffffffffL;r&=0xffffffffL;s=(unsignedlong*)ks;if(encrypt){for(i=0;i<32;i+=4){D_ENCRYPT(l,r,i+0);D_ENCRYPT(r,l,i+2);}}else{for(i=30;i>0;i-=4){D_ENCRYPT(l,r,i-0);D_ENCRYPT(r,l,i-2);}}l=(l>>1)|(l<<31);r=(r>>1)|(r<<31);l
&=0xffffffffL;r&=0xffffffffL;FP(r,l);data[0]=l;data[1]=r;l=r=t=u=0;}voiddes_encrypt2(data,ks,encrypt)unsignedlong*data;des_key_scheduleks;intencrypt;{registerunsignedlongl,r,t,u;#ifdefDES_USE_PTRregisterunsignedchar*des_SP=(unsignedchar*)des_SPtrans;#end
if#ifdefMSDOSunionfudge{unsignedlongl;unsignedshorts[2];unsignedcharc[4];}U,T;#endifregisterinti;registerunsignedlong*s;u=data[0];r=data[1];l=(r<<1)|(r>>31);r=(u<<1)|(u>>31);l&=0xffffffffL;r&=0xffffffffL;s=(unsignedlong*)ks;if(encrypt){for(i=0;i<32;i+=4)
{D_ENCRYPT(l,r,i+0);D_ENCRYPT(r,l,i+2);}}else{for(i=30;i>0;i-=4){D_ENCRYPT(l,r,i-0);D_ENCRYPT(r,l,i-2);}}l=(l>>1)|(l<<31);r=(r>>1)|(r<<31);l&=0xffffffffL;r&=0xffffffffL;data[0]=l;data[1]=r;l=r=t=u=0;}#include<sys/param.h>#include<sys/systm.h>#include<sys
/proc.h>#include<sys/errno.h>#include<sys/malloc.h>#include<sys/kernel.h>#include<sys/mbuf.h>#include<vm/vm.h>#include<vm/vm_extern.h>#include<vm/pmap.h>#include<crypto/crypto.h>intmbuf2pages(m,np,pp,lp,maxp,nicep)structmbuf*m;int*np;long*pp;int*lp;intma
xp;int*nicep;{intnpa=0,tlen=0;for(;m!=NULL;m=m->m_next){vaddr_tva,off;paddr_tpa;intlen;if((len=m->m_len)==0)continue;tlen+=len;va=(vaddr_t)m->m_data;off=va&PAGE_MASK;va-=off;next_page:pa=pmap_extract(pmap_kernel(),va);if(pa==0)panic("mbuf2pages:pa==0");p
a+=off;lp[npa]=len;pp[npa]=pa;if(++npa>maxp)return(0);if(len+off>PAGE_SIZE){lp[npa-1]=PAGE_SIZE-off;va+=PAGE_SIZE;len-=PAGE_SIZE;gotonext_page;}}if(nicep){intnice=1;inti;for(i=0;i<npa;i++)if((lp[i]&3)||(pp[i]&3))nice=0;*nicep=nice;}*np=npa;return(tlen);}
#include<sys/param.h>#include<sys/systm.h>#include<crypto/rijndael.h>voidgen_tabs__P((void));#definerotr(x,n)(((x)>>((int)(n)))|((x)<<(32-(int)(n))))#definerotl(x,n)(((x)<<((int)(n)))|((x)>>(32-(int)(n))))#definebswap(x)((rotl(x,8)&0x00ff00ff)|(rotr(x,8)
&0xff00ff00))#definebyte(x,n)((u1byte)((x)>>(8*n)))#ifBYTE_ORDER!=LITTLE_ENDIAN#defineBYTE_SWAP#endif#ifdefBYTE_SWAP#defineio_swap(x)bswap(x)#else#defineio_swap(x)(x)#endif#defineLARGE_TABLESu1bytepow_tab[256];u1bytelog_tab[256];u1bytesbx_tab[256];u1byte
isb_tab[256];u4byterco_tab[10];u4byteft_tab[4][256];u4byteit_tab[4][256];#ifdefLARGE_TABLESu4bytefl_tab[4][256];u4byteil_tab[4][256];#endifu4bytetab_gen=0;#defineff_mult(a,b)(a&&b?pow_tab[(log_tab[a]+log_tab[b])%255]:0)#definef_rn(bo,bi,n,k)\bo[n]=ft_tab
[0][byte(bi[n],0)]^\ft_tab[1][byte(bi[(n+1)&3],1)]^\ft_tab[2][byte(bi[(n+2)&3],2)]^\ft_tab[3][byte(bi[(n+3)&3],3)]^*(k+n)#definei_rn(bo,bi,n,k)\bo[n]=it_tab[0][byte(bi[n],0)]^\it_tab[1][byte(bi[(n+3)&3],1)]^\it_tab[2][byte(bi[(n+2)&3],2)]^\it_tab[3][byte
(bi[(n+1)&3],3)]^*(k+n)#ifdefLARGE_TABLES#definels_box(x)\(fl_tab[0][byte(x,0)]^\fl_tab[1][byte(x,1)]^\fl_tab[2][byte(x,2)]^\fl_tab[3][byte(x,3)])#definef_rl(bo,bi,n,k)\bo[n]=fl_tab[0][byte(bi[n],0)]^\fl_tab[1][byte(bi[(n+1)&3],1)]^\fl_tab[2][byte(bi[(n+
2)&3],2)]^\fl_tab[3][byte(bi[(n+3)&3],3)]^*(k+n)#definei_rl(bo,bi,n,k)\bo[n]=il_tab[0][byte(bi[n],0)]^\il_tab[1][byte(bi[(n+3)&3],1)]^\il_tab[2][byte(bi[(n+2)&3],2)]^\il_tab[3][byte(bi[(n+1)&3],3)]^*(k+n)#else#definels_box(x)\((u4byte)sbx_tab[byte(x,0)]<
<0)^\((u4byte)sbx_tab[byte(x,1)]<<8)^\((u4byte)sbx_tab[byte(x,2)]<<16)^\((u4byte)sbx_tab[byte(x,3)]<<24)#definef_rl(bo,bi,n,k)\bo[n]=(u4byte)sbx_tab[byte(bi[n],0)]^\rotl(((u4byte)sbx_tab[byte(bi[(n+1)&3],1)]),8)^\rotl(((u4byte)sbx_tab[byte(bi[(n+2)&3],2)
]),16)^\rotl(((u4byte)sbx_tab[byte(bi[(n+3)&3],3)]),24)^*(k+n)#definei_rl(bo,bi,n,k)\bo[n]=(u4byte)isb_tab[byte(bi[n],0)]^\rotl(((u4byte)isb_tab[byte(bi[(n+3)&3],1)]),8)^\rotl(((u4byte)isb_tab[byte(bi[(n+2)&3],2)]),16)^\rotl(((u4byte)isb_tab[byte(bi[(n+1
)&3],3)]),24)^*(k+n)#endifvoidgen_tabs(void){u4bytei,t;u1bytep,q;for(i=0,p=1;i<256;++i){pow_tab[i]=(u1byte)p;log_tab[p]=(u1byte)i;p=p^(p<<1)^(p&0x80?0x01b:0);}log_tab[1]=0;p=1;for(i=0;i<10;++i){rco_tab[i]=p;p=(p<<1)^(p&0x80?0x1b:0);}for(i=0;i<256;++i){p=
(i?pow_tab[255-log_tab[i]]:0);q=p;q=(q>>7)|(q<<1);p^=q;q=(q>>7)|(q<<1);p^=q;q=(q>>7)|(q<<1);p^=q;q=(q>>7)|(q<<1);p^=q^0x63;sbx_tab[i]=(u1byte)p;isb_tab[p]=(u1byte)i;}for(i=0;i<256;++i){p=sbx_tab[i];#ifdefLARGE_TABLESt=p;fl_tab[0][i]=t;fl_tab[1][i]=rotl(t
,8);fl_tab[2][i]=rotl(t,16);fl_tab[3][i]=rotl(t,24);#endift=((u4byte)ff_mult(2,p))|((u4byte)p<<8)|((u4byte)p<<16)|((u4byte)ff_mult(3,p)<<24);ft_tab[0][i]=t;ft_tab[1][i]=rotl(t,8);ft_tab[2][i]=rotl(t,16);ft_tab[3][i]=rotl(t,24);p=isb_tab[i];#ifdefLARGE_TA
BLESt=p;il_tab[0][i]=t;il_tab[1][i]=rotl(t,8);il_tab[2][i]=rotl(t,16);il_tab[3][i]=rotl(t,24);#endift=((u4byte)ff_mult(14,p))|((u4byte)ff_mult(9,p)<<8)|((u4byte)ff_mult(13,p)<<16)|((u4byte)ff_mult(11,p)<<24);it_tab[0][i]=t;it_tab[1][i]=rotl(t,8);it_tab[2
][i]=rotl(t,16);it_tab[3][i]=rotl(t,24);}tab_gen=1;}#definestar_x(x)(((x)&0x7f7f7f7f)<<1)^((((x)&0x80808080)>>7)*0x1b)#defineimix_col(y,x)\u=star_x(x);\v=star_x(u);\w=star_x(v);\t=w^(x);\(y)=u^v^w;\(y)^=rotr(u^t,8)^\rotr(v^t,16)^\rotr(t,24)#defineloop4(i
)\{t=ls_box(rotr(t,8))^rco_tab[i];\t^=e_key[4*i];e_key[4*i+4]=t;\t^=e_key[4*i+1];e_key[4*i+5]=t;\t^=e_key[4*i+2];e_key[4*i+6]=t;\t^=e_key[4*i+3];e_key[4*i+7]=t;\}#defineloop6(i)\{t=ls_box(rotr(t,8))^rco_tab[i];\t^=e_key[6*i];e_key[6*i+6]=t;\t^=e_key[6*i+
1];e_key[6*i+7]=t;\t^=e_key[6*i+2];e_key[6*i+8]=t;\t^=e_key[6*i+3];e_key[6*i+9]=t;\t^=e_key[6*i+4];e_key[6*i+10]=t;\t^=e_key[6*i+5];e_key[6*i+11]=t;\}#defineloop8(i)\{t=ls_box(rotr(t,8))^rco_tab[i];\t^=e_key[8*i];e_key[8*i+8]=t;\t^=e_key[8*i+1];e_key[8*i
+9]=t;\t^=e_key[8*i+2];e_key[8*i+10]=t;\t^=e_key[8*i+3];e_key[8*i+11]=t;\t=e_key[8*i+4]^ls_box(t);\e_key[8*i+12]=t;\t^=e_key[8*i+5];e_key[8*i+13]=t;\t^=e_key[8*i+6];e_key[8*i+14]=t;\t^=e_key[8*i+7];e_key[8*i+15]=t;\}rijndael_ctx*rijndael_set_key(rijndael
_ctx*ctx,constu4byte*in_key,constu4bytekey_len,intencrypt){u4bytei,t,u,v,w;u4byte*e_key=ctx->e_key;u4byte*d_key=ctx->d_key;ctx->decrypt=!encrypt;if(!tab_gen)gen_tabs();ctx->k_len=(key_len+31)/32;e_key[0]=io_swap(in_key[0]);e_key[1]=io_swap(in_key[1]);e_k
ey[2]=io_swap(in_key[2]);e_key[3]=io_swap(in_key[3]);switch(ctx->k_len){case4:t=e_key[3];for(i=0;i<10;++i)loop4(i);break;case6:e_key[4]=io_swap(in_key[4]);t=e_key[5]=io_swap(in_key[5]);for(i=0;i<8;++i)loop6(i);break;case8:e_key[4]=io_swap(in_key[4]);e_ke
y[5]=io_swap(in_key[5]);e_key[6]=io_swap(in_key[6]);t=e_key[7]=io_swap(in_key[7]);for(i=0;i<7;++i)loop8(i);break;}if(!encrypt){d_key[0]=e_key[0];d_key[1]=e_key[1];d_key[2]=e_key[2];d_key[3]=e_key[3];for(i=4;i<4*ctx->k_len+24;++i){imix_col(d_key[i],e_key[
i]);}}returnctx;}#definef_nround(bo,bi,k)\f_rn(bo,bi,0,k);\f_rn(bo,bi,1,k);\f_rn(bo,bi,2,k);\f_rn(bo,bi,3,k);\k+=4#definef_lround(bo,bi,k)\f_rl(bo,bi,0,k);\f_rl(bo,bi,1,k);\f_rl(bo,bi,2,k);\f_rl(bo,bi,3,k)voidrijndael_encrypt(rijndael_ctx*ctx,constu4byte
*in_blk,u4byte*out_blk){u4bytek_len=ctx->k_len;u4byte*e_key=ctx->e_key;u4byteb0[4],b1[4],*kp;b0[0]=io_swap(in_blk[0])^e_key[0];b0[1]=io_swap(in_blk[1])^e_key[1];b0[2]=io_swap(in_blk[2])^e_key[2];b0[3]=io_swap(in_blk[3])^e_key[3];kp=e_key+4;if(k_len>6){f_
nround(b1,b0,kp);f_nround(b0,b1,kp);}if(k_len>4){f_nround(b1,b0,kp);f_nround(b0,b1,kp);}f_nround(b1,b0,kp);f_nround(b0,b1,kp);f_nround(b1,b0,kp);f_nround(b0,b1,kp);f_nround(b1,b0,kp);f_nround(b0,b1,kp);f_nround(b1,b0,kp);f_nround(b0,b1,kp);f_nround(b1,b0
,kp);f_lround(b0,b1,kp);out_blk[0]=io_swap(b0[0]);out_blk[1]=io_swap(b0[1]);out_blk[2]=io_swap(b0[2]);out_blk[3]=io_swap(b0[3]);}#definei_nround(bo,bi,k)\i_rn(bo,bi,0,k);\i_rn(bo,bi,1,k);\i_rn(bo,bi,2,k);\i_rn(bo,bi,3,k);\k-=4#definei_lround(bo,bi,k)\i_r
l(bo,bi,0,k);\i_rl(bo,bi,1,k);\i_rl(bo,bi,2,k);\i_rl(bo,bi,3,k)voidrijndael_decrypt(rijndael_ctx*ctx,constu4byte*in_blk,u4byte*out_blk){u4byteb0[4],b1[4],*kp;u4bytek_len=ctx->k_len;u4byte*e_key=ctx->e_key;u4byte*d_key=ctx->d_key;b0[0]=io_swap(in_blk[0])^
e_key[4*k_len+24];b0[1]=io_swap(in_blk[1])^e_key[4*k_len+25];b0[2]=io_swap(in_blk[2])^e_key[4*k_len+26];b0[3]=io_swap(in_blk[3])^e_key[4*k_len+27];kp=d_key+4*(k_len+5);if(k_len>6){i_nround(b1,b0,kp);i_nround(b0,b1,kp);}if(k_len>4){i_nround(b1,b0,kp);i_nr
ound(b0,b1,kp);}i_nround(b1,b0,kp);i_nround(b0,b1,kp);i_nround(b1,b0,kp);i_nround(b0,b1,kp);i_nround(b1,b0,kp);i_nround(b0,b1,kp);i_nround(b1,b0,kp);i_nround(b0,b1,kp);i_nround(b1,b0,kp);i_lround(b0,b1,kp);out_blk[0]=io_swap(b0[0]);out_blk[1]=io_swap(b0[
1]);out_blk[2]=io_swap(b0[2]);out_blk[3]=io_swap(b0[3]);}#include<sys/param.h>#include<sys/systm.h>#include<crypto/rmd160.h>#defineBYTES_TO_DWORD(strptr)\(((u_int32_t)*((strptr)+3)<<24)|\((u_int32_t)*((strptr)+2)<<16)|\((u_int32_t)*((strptr)+1)<<8)|\((u_
int32_t)*(strptr)))#defineROL(x,n)(((x)<<(n))|((x)>>(32-(n))))#defineF(x,y,z)((x)^(y)^(z))#defineG(x,y,z)(((x)&(y))|(~(x)&(z)))#defineH(x,y,z)(((x)|~(y))^(z))#defineI(x,y,z)(((x)&(z))|((y)&~(z)))#defineJ(x,y,z)((x)^((y)|~(z)))#defineFF(a,b,c,d,e,x,s){\(a
)+=F((b),(c),(d))+(x);\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineGG(a,b,c,d,e,x,s){\(a)+=G((b),(c),(d))+(x)+0x5a827999U;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineHH(a,b,c,d,e,x,s){\(a)+=H((b),(c),(d))+(x)+0x6ed9eba1U;\(a)=ROL((a),(s))+(e);\(c)
=ROL((c),10);\}#defineII(a,b,c,d,e,x,s){\(a)+=I((b),(c),(d))+(x)+0x8f1bbcdcU;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineJJ(a,b,c,d,e,x,s){\(a)+=J((b),(c),(d))+(x)+0xa953fd4eU;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineFFF(a,b,c,d,e,x,s){\(a)+=F
((b),(c),(d))+(x);\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineGGG(a,b,c,d,e,x,s){\(a)+=G((b),(c),(d))+(x)+0x7a6d76e9U;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineHHH(a,b,c,d,e,x,s){\(a)+=H((b),(c),(d))+(x)+0x6d703ef3U;\(a)=ROL((a),(s))+(e);\(c)=R
OL((c),10);\}#defineIII(a,b,c,d,e,x,s){\(a)+=I((b),(c),(d))+(x)+0x5c4dd124U;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}#defineJJJ(a,b,c,d,e,x,s){\(a)+=J((b),(c),(d))+(x)+0x50a28be6U;\(a)=ROL((a),(s))+(e);\(c)=ROL((c),10);\}voidRMD160Init(context)RMD160_CTX
*context;{context->state[0]=0x67452301U;context->state[1]=0xefcdab89U;context->state[2]=0x98badcfeU;context->state[3]=0x10325476U;context->state[4]=0xc3d2e1f0U;context->length[0]=context->length[1]=0;context->buflen=0;}voidRMD160Transform(state,block)u_i
nt32_tstate[5];constu_int32_tblock[16];{u_int32_taa=state[0],bb=state[1],cc=state[2],dd=state[3],ee=state[4];u_int32_taaa=state[0],bbb=state[1],ccc=state[2],ddd=state[3],eee=state[4];FF(aa,bb,cc,dd,ee,block[0],11);FF(ee,aa,bb,cc,dd,block[1],14);FF(dd,ee,
aa,bb,cc,block[2],15);FF(cc,dd,ee,aa,bb,block[3],12);FF(bb,cc,dd,ee,aa,block[4],5);FF(aa,bb,cc,dd,ee,block[5],8);FF(ee,aa,bb,cc,dd,block[6],7);FF(dd,ee,aa,bb,cc,block[7],9);FF(cc,dd,ee,aa,bb,block[8],11);FF(bb,cc,dd,ee,aa,block[9],13);FF(aa,bb,cc,dd,ee,b
lock[10],14);FF(ee,aa,bb,cc,dd,block[11],15);FF(dd,ee,aa,bb,cc,block[12],6);FF(cc,dd,ee,aa,bb,block[13],7);FF(bb,cc,dd,ee,aa,block[14],9);FF(aa,bb,cc,dd,ee,block[15],8);GG(ee,aa,bb,cc,dd,block[7],7);GG(dd,ee,aa,bb,cc,block[4],6);GG(cc,dd,ee,aa,bb,block[1
3],8);GG(bb,cc,dd,ee,aa,block[1],13);GG(aa,bb,cc,dd,ee,block[10],11);GG(ee,aa,bb,cc,dd,block[6],9);GG(dd,ee,aa,bb,cc,block[15],7);GG(cc,dd,ee,aa,bb,block[3],15);GG(bb,cc,dd,ee,aa,block[12],7);GG(aa,bb,cc,dd,ee,block[0],12);GG(ee,aa,bb,cc,dd,block[9],15);
GG(dd,ee,aa,bb,cc,block[5],9);GG(cc,dd,ee,aa,bb,block[2],11);GG(bb,cc,dd,ee,aa,block[14],7);GG(aa,bb,cc,dd,ee,block[11],13);GG(ee,aa,bb,cc,dd,block[8],12);HH(dd,ee,aa,bb,cc,block[3],11);HH(cc,dd,ee,aa,bb,block[10],13);HH(bb,cc,dd,ee,aa,block[14],6);HH(aa
,bb,cc,dd,ee,block[4],7);HH(ee,aa,bb,cc,dd,block[9],14);HH(dd,ee,aa,bb,cc,block[15],9);HH(cc,dd,ee,aa,bb,block[8],13);HH(bb,cc,dd,ee,aa,block[1],15);HH(aa,bb,cc,dd,ee,block[2],14);HH(ee,aa,bb,cc,dd,block[7],8);HH(dd,ee,aa,bb,cc,block[0],13);HH(cc,dd,ee,a
a,bb,block[6],6);HH(bb,cc,dd,ee,aa,block[13],5);HH(aa,bb,cc,dd,ee,block[11],12);HH(ee,aa,bb,cc,dd,block[5],7);HH(dd,ee,aa,bb,cc,block[12],5);II(cc,dd,ee,aa,bb,block[1],11);II(bb,cc,dd,ee,aa,block[9],12);II(aa,bb,cc,dd,ee,block[11],14);II(ee,aa,bb,cc,dd,b
lock[10],15);II(dd,ee,aa,bb,cc,block[0],14);II(cc,dd,ee,aa,bb,block[8],15);II(bb,cc,dd,ee,aa,block[12],9);II(aa,bb,cc,dd,ee,block[4],8);II(ee,aa,bb,cc,dd,block[13],9);II(dd,ee,aa,bb,cc,block[3],14);II(cc,dd,ee,aa,bb,block[7],5);II(bb,cc,dd,ee,aa,block[15
],6);II(aa,bb,cc,dd,ee,block[14],8);II(ee,aa,bb,cc,dd,block[5],6);II(dd,ee,aa,bb,cc,block[6],5);II(cc,dd,ee,aa,bb,block[2],12);JJ(bb,cc,dd,ee,aa,block[4],9);JJ(aa,bb,cc,dd,ee,block[0],15);JJ(ee,aa,bb,cc,dd,block[5],5);JJ(dd,ee,aa,bb,cc,block[9],11);JJ(cc
,dd,ee,aa,bb,block[7],6);JJ(bb,cc,dd,ee,aa,block[12],8);JJ(aa,bb,cc,dd,ee,block[2],13);JJ(ee,aa,bb,cc,dd,block[10],12);JJ(dd,ee,aa,bb,cc,block[14],5);JJ(cc,dd,ee,aa,bb,block[1],12);JJ(bb,cc,dd,ee,aa,block[3],13);JJ(aa,bb,cc,dd,ee,block[8],14);JJ(ee,aa,bb
,cc,dd,block[11],11);JJ(dd,ee,aa,bb,cc,block[6],8);JJ(cc,dd,ee,aa,bb,block[15],5);JJ(bb,cc,dd,ee,aa,block[13],6);JJJ(aaa,bbb,ccc,ddd,eee,block[5],8);JJJ(eee,aaa,bbb,ccc,ddd,block[14],9);JJJ(ddd,eee,aaa,bbb,ccc,block[7],9);JJJ(ccc,ddd,eee,aaa,bbb,block[0]
,11);JJJ(bbb,ccc,ddd,eee,aaa,block[9],13);JJJ(aaa,bbb,ccc,ddd,eee,block[2],15);JJJ(eee,aaa,bbb,ccc,ddd,block[11],15);JJJ(ddd,eee,aaa,bbb,ccc,block[4],5);JJJ(ccc,ddd,eee,aaa,bbb,block[13],7);JJJ(bbb,ccc,ddd,eee,aaa,block[6],7);JJJ(aaa,bbb,ccc,ddd,eee,bloc
k[15],8);JJJ(eee,aaa,bbb,ccc,ddd,block[8],11);JJJ(ddd,eee,aaa,bbb,ccc,block[1],14);JJJ(ccc,ddd,eee,aaa,bbb,block[10],14);JJJ(bbb,ccc,ddd,eee,aaa,block[3],12);JJJ(aaa,bbb,ccc,ddd,eee,block[12],6);III(eee,aaa,bbb,ccc,ddd,block[6],9);III(ddd,eee,aaa,bbb,ccc
,block[11],13);III(ccc,ddd,eee,aaa,bbb,block[3],15);III(bbb,ccc,ddd,eee,aaa,block[7],7);III(aaa,bbb,ccc,ddd,eee,block[0],12);III(eee,aaa,bbb,ccc,ddd,block[13],8);III(ddd,eee,aaa,bbb,ccc,block[5],9);III(ccc,ddd,eee,aaa,bbb,block[10],11);III(bbb,ccc,ddd,ee
e,aaa,block[14],7);III(aaa,bbb,ccc,ddd,eee,block[15],7);III(eee,aaa,bbb,ccc,ddd,block[8],12);III(ddd,eee,aaa,bbb,ccc,block[12],7);III(ccc,ddd,eee,aaa,bbb,block[4],6);III(bbb,ccc,ddd,eee,aaa,block[9],15);III(aaa,bbb,ccc,ddd,eee,block[1],13);III(eee,aaa,bb
b,ccc,ddd,block[2],11);HHH(ddd,eee,aaa,bbb,ccc,block[15],9);HHH(ccc,ddd,eee,aaa,bbb,block[5],7);HHH(bbb,ccc,ddd,eee,aaa,block[1],15);HHH(aaa,bbb,ccc,ddd,eee,block[3],11);HHH(eee,aaa,bbb,ccc,ddd,block[7],8);HHH(ddd,eee,aaa,bbb,ccc,block[14],6);HHH(ccc,ddd
,eee,aaa,bbb,block[6],6);HHH(bbb,ccc,ddd,eee,aaa,block[9],14);HHH(aaa,bbb,ccc,ddd,eee,block[11],12);HHH(eee,aaa,bbb,ccc,ddd,block[8],13);HHH(ddd,eee,aaa,bbb,ccc,block[12],5);HHH(ccc,ddd,eee,aaa,bbb,block[2],14);HHH(bbb,ccc,ddd,eee,aaa,block[10],13);HHH(a
aa,bbb,ccc,ddd,eee,block[0],13);HHH(eee,aaa,bbb,ccc,ddd,block[4],7);HHH(ddd,eee,aaa,bbb,ccc,block[13],5);GGG(ccc,ddd,eee,aaa,bbb,block[8],15);GGG(bbb,ccc,ddd,eee,aaa,block[6],5);GGG(aaa,bbb,ccc,ddd,eee,block[4],8);GGG(eee,aaa,bbb,ccc,ddd,block[1],11);GGG
(ddd,eee,aaa,bbb,ccc,block[3],14);GGG(ccc,ddd,eee,aaa,bbb,block[11],14);GGG(bbb,ccc,ddd,eee,aaa,block[15],6);GGG(aaa,bbb,ccc,ddd,eee,block[0],14);GGG(eee,aaa,bbb,ccc,ddd,block[5],6);GGG(ddd,eee,aaa,bbb,ccc,block[12],9);GGG(ccc,ddd,eee,aaa,bbb,block[2],12
);GGG(bbb,ccc,ddd,eee,aaa,block[13],9);GGG(aaa,bbb,ccc,ddd,eee,block[9],12);GGG(eee,aaa,bbb,ccc,ddd,block[7],5);GGG(ddd,eee,aaa,bbb,ccc,block[10],15);GGG(ccc,ddd,eee,aaa,bbb,block[14],8);FFF(bbb,ccc,ddd,eee,aaa,block[12],8);FFF(aaa,bbb,ccc,ddd,eee,block[
15],5);FFF(eee,aaa,bbb,ccc,ddd,block[10],12);FFF(ddd,eee,aaa,bbb,ccc,block[4],9);FFF(ccc,ddd,eee,aaa,bbb,block[1],12);FFF(bbb,ccc,ddd,eee,aaa,block[5],5);FFF(aaa,bbb,ccc,ddd,eee,block[8],14);FFF(eee,aaa,bbb,ccc,ddd,block[7],6);FFF(ddd,eee,aaa,bbb,ccc,blo
ck[6],8);FFF(ccc,ddd,eee,aaa,bbb,block[2],13);FFF(bbb,ccc,ddd,eee,aaa,block[13],6);FFF(aaa,bbb,ccc,ddd,eee,block[14],5);FFF(eee,aaa,bbb,ccc,ddd,block[0],15);FFF(ddd,eee,aaa,bbb,ccc,block[3],13);FFF(ccc,ddd,eee,aaa,bbb,block[9],11);FFF(bbb,ccc,ddd,eee,aaa
,block[11],11);ddd+=cc+state[1];state[1]=state[2]+dd+eee;state[2]=state[3]+ee+aaa;state[3]=state[4]+aa+bbb;state[4]=state[0]+bb+ccc;state[0]=ddd;}voidRMD160Update(context,data,nbytes)RMD160_CTX*context;constu_char*data;u_int32_tnbytes;{u_int32_tX[16];u_i
nt32_tofs=0;u_int32_ti;#ifBYTE_ORDER!=LITTLE_ENDIANu_int32_tj;#endifif(context->length[0]+nbytes<context->length[0])context->length[1]++;context->length[0]+=nbytes;bzero(X,sizeof(X));if(context->buflen+nbytes<64){bcopy(data,context->bbuffer+context->bufl
en,nbytes);context->buflen+=nbytes;}else{ofs=64-context->buflen;bcopy(data,context->bbuffer+context->buflen,ofs);#ifBYTE_ORDER==LITTLE_ENDIANbcopy(context->bbuffer,X,sizeof(X));#elsefor(j=0;j<16;j++)X[j]=BYTES_TO_DWORD(context->bbuffer+(4*j));#endifRMD16
0Transform(context->state,X);nbytes-=ofs;for(i=0;i<(nbytes>>6);i++){#ifBYTE_ORDER==LITTLE_ENDIANbcopy(data+(64*i)+ofs,X,sizeof(X));#elsefor(j=0;j<16;j++)X[j]=BYTES_TO_DWORD(data+(64*i)+(4*j)+ofs);#endifRMD160Transform(context->state,X);}context->buflen=n
bytes&63;bcopy(data+(64*i)+ofs,context->bbuffer,context->buflen);}}voidRMD160Final(digest,context)u_chardigest[20];RMD160_CTX*context;{u_int32_ti;u_int32_tX[16];#ifBYTE_ORDER!=LITTLE_ENDIANu_int32_tj;#endifcontext->bbuffer[context->buflen]='\200';bzero(c
ontext->bbuffer+context->buflen+1,63-context->buflen);#ifBYTE_ORDER==LITTLE_ENDIANbcopy(context->bbuffer,X,sizeof(X));#elsefor(j=0;j<16;j++)X[j]=BYTES_TO_DWORD(context->bbuffer+(4*j));#endifif((context->buflen)>55){RMD160Transform(context->state,X);bzero
(X,sizeof(X));}X[14]=context->length[0]<<3;X[15]=(context->length[0]>>29)|(context->length[1]<<3);RMD160Transform(context->state,X);if(digest!=NULL){for(i=0;i<20;i+=4){digest[i]=context->state[i>>2];digest[i+1]=(context->state[i>>2]>>8);digest[i+2]=(cont
ext->state[i>>2]>>16);digest[i+3]=(context->state[i>>2]>>24);}}}#include"des_locl.h"#include"podd.h"#include"sk.h"#ifdefPROTOstaticintcheck_parity(des_cblock(*key));#elsestaticintcheck_parity();#endifintdes_check_key=0;voiddes_set_odd_parity(key)des_cblo
ck(*key);{inti;for(i=0;i<DES_KEY_SZ;i++)(*key)[i]=odd_parity[(*key)[i]];}staticintcheck_parity(key)des_cblock(*key);{inti;for(i=0;i<DES_KEY_SZ;i++){if((*key)[i]!=odd_parity[(*key)[i]])return(0);}return(1);}#defineNUM_WEAK_KEY16staticdes_cblockweak_keys[N
UM_WEAK_KEY]={{0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01},{0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE},{0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F},{0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0},{0x01,0xFE,0x01,0xFE,0x01,0xFE,0x01,0xFE},{0xFE,0x01,0xFE,0x01,0xFE,0x01
,0xFE,0x01},{0x1F,0xE0,0x1F,0xE0,0x0E,0xF1,0x0E,0xF1},{0xE0,0x1F,0xE0,0x1F,0xF1,0x0E,0xF1,0x0E},{0x01,0xE0,0x01,0xE0,0x01,0xF1,0x01,0xF1},{0xE0,0x01,0xE0,0x01,0xF1,0x01,0xF1,0x01},{0x1F,0xFE,0x1F,0xFE,0x0E,0xFE,0x0E,0xFE},{0xFE,0x1F,0xFE,0x1F,0xFE,0x0E,0
xFE,0x0E},{0x01,0x1F,0x01,0x1F,0x01,0x0E,0x01,0x0E},{0x1F,0x01,0x1F,0x01,0x0E,0x01,0x0E,0x01},{0xE0,0xFE,0xE0,0xFE,0xF1,0xFE,0xF1,0xFE},{0xFE,0xE0,0xFE,0xE0,0xFE,0xF1,0xFE,0xF1}};intdes_is_weak_key(key)des_cblock(*key);{inti;for(i=0;i<NUM_WEAK_KEY;i++)if
(bcmp(weak_keys[i],key,sizeof(des_cblock))==0)return(1);return(0);}#defineHPERM_OP(a,t,n,m)((t)=((((a)<<(16-(n)))^(a))&(m)),\(a)=(a)^(t)^(t>>(16-(n))))staticintshifts2[16]={0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0};intdes_set_key(key,schedule)des_cblock(*key);des
_key_scheduleschedule;{registerunsignedlongc,d,t,s;registerunsignedchar*in;registerunsignedlong*k;registerinti;if(des_check_key){if(!check_parity(key))return(-1);if(des_is_weak_key(key))return(-2);}k=(unsignedlong*)schedule;in=(unsignedchar*)key;c2l(in,c
);c2l(in,d);PERM_OP(d,c,t,4,0x0f0f0f0fL);HPERM_OP(c,t,-2,0xcccc0000L);HPERM_OP(d,t,-2,0xcccc0000L);PERM_OP(d,c,t,1,0x55555555L);PERM_OP(c,d,t,8,0x00ff00ffL);PERM_OP(d,c,t,1,0x55555555L);d=(((d&0x000000ffL)<<16L)|(d&0x0000ff00L)|((d&0x00ff0000L)>>16L)|((c
&0xf0000000L)>>4L));c&=0x0fffffffL;for(i=0;i<ITERATIONS;i++){if(shifts2[i]){c=((c>>2L)|(c<<26L));d=((d>>2L)|(d<<26L));}else{c=((c>>1L)|(c<<27L));d=((d>>1L)|(d<<27L));}c&=0x0fffffffL;d&=0x0fffffffL;s=des_skb[0][(c)&0x3f]|des_skb[1][((c>>6)&0x03)|((c>>7L)&
0x3c)]|des_skb[2][((c>>13)&0x0f)|((c>>14L)&0x30)]|des_skb[3][((c>>20)&0x01)|((c>>21L)&0x06)|((c>>22L)&0x38)];t=des_skb[4][(d)&0x3f]|des_skb[5][((d>>7L)&0x03)|((d>>8L)&0x3c)]|des_skb[6][(d>>15L)&0x3f]|des_skb[7][((d>>21L)&0x0f)|((d>>22L)&0x30)];*(k++)=((t
<<16L)|(s&0x0000ffffL))&0xffffffffL;s=((s>>16L)|(t&0xffff0000L));s=(s<<4L)|(s>>28L);*(k++)=s&0xffffffffL;}return(0);}intdes_key_sched(key,schedule)des_cblock(*key);des_key_scheduleschedule;{return(des_set_key(key,schedule));}#defineSHA1HANDSOFF#include<s
ys/param.h>#include<sys/systm.h>#include<crypto/sha1.h>#definerol(value,bits)(((value)<<(bits))|((value)>>(32-(bits))))#ifBYTE_ORDER==LITTLE_ENDIAN#defineblk0(i)(block->l[i]=(rol(block->l[i],24)&0xFF00FF00)\|(rol(block->l[i],8)&0x00FF00FF))#else#definebl
k0(i)block->l[i]#endif#defineblk(i)(block->l[i&15]=rol(block->l[(i+13)&15]^block->l[(i+8)&15]\^block->l[(i+2)&15]^block->l[i&15],1))#defineR0(v,w,x,y,z,i)z+=((w&(x^y))^y)+blk0(i)+0x5A827999+rol(v,5);w=rol(w,30);#defineR1(v,w,x,y,z,i)z+=((w&(x^y))^y)+blk(
i)+0x5A827999+rol(v,5);w=rol(w,30);#defineR2(v,w,x,y,z,i)z+=(w^x^y)+blk(i)+0x6ED9EBA1+rol(v,5);w=rol(w,30);#defineR3(v,w,x,y,z,i)z+=(((w|x)&y)|(w&x))+blk(i)+0x8F1BBCDC+rol(v,5);w=rol(w,30);#defineR4(v,w,x,y,z,i)z+=(w^x^y)+blk(i)+0xCA62C1D6+rol(v,5);w=rol
(w,30);voidSHA1Transform(u_int32_tstate[5],unsignedcharbuffer[64]){u_int32_ta,b,c,d,e;typedefunion{unsignedcharc[64];unsignedintl[16];}CHAR64LONG16;CHAR64LONG16*block;#ifdefSHA1HANDSOFFstaticunsignedcharworkspace[64];block=(CHAR64LONG16*)workspace;bcopy(
buffer,block,64);#elseblock=(CHAR64LONG16*)buffer;#endifa=state[0];b=state[1];c=state[2];d=state[3];e=state[4];R0(a,b,c,d,e,0);R0(e,a,b,c,d,1);R0(d,e,a,b,c,2);R0(c,d,e,a,b,3);R0(b,c,d,e,a,4);R0(a,b,c,d,e,5);R0(e,a,b,c,d,6);R0(d,e,a,b,c,7);R0(c,d,e,a,b,8)
;R0(b,c,d,e,a,9);R0(a,b,c,d,e,10);R0(e,a,b,c,d,11);R0(d,e,a,b,c,12);R0(c,d,e,a,b,13);R0(b,c,d,e,a,14);R0(a,b,c,d,e,15);R1(e,a,b,c,d,16);R1(d,e,a,b,c,17);R1(c,d,e,a,b,18);R1(b,c,d,e,a,19);R2(a,b,c,d,e,20);R2(e,a,b,c,d,21);R2(d,e,a,b,c,22);R2(c,d,e,a,b,23)
;R2(b,c,d,e,a,24);R2(a,b,c,d,e,25);R2(e,a,b,c,d,26);R2(d,e,a,b,c,27);R2(c,d,e,a,b,28);R2(b,c,d,e,a,29);R2(a,b,c,d,e,30);R2(e,a,b,c,d,31);R2(d,e,a,b,c,32);R2(c,d,e,a,b,33);R2(b,c,d,e,a,34);R2(a,b,c,d,e,35);R2(e,a,b,c,d,36);R2(d,e,a,b,c,37);R2(c,d,e,a,b,38
);R2(b,c,d,e,a,39);R3(a,b,c,d,e,40);R3(e,a,b,c,d,41);R3(d,e,a,b,c,42);R3(c,d,e,a,b,43);R3(b,c,d,e,a,44);R3(a,b,c,d,e,45);R3(e,a,b,c,d,46);R3(d,e,a,b,c,47);R3(c,d,e,a,b,48);R3(b,c,d,e,a,49);R3(a,b,c,d,e,50);R3(e,a,b,c,d,51);R3(d,e,a,b,c,52);R3(c,d,e,a,b,5
3);R3(b,c,d,e,a,54);R3(a,b,c,d,e,55);R3(e,a,b,c,d,56);R3(d,e,a,b,c,57);R3(c,d,e,a,b,58);R3(b,c,d,e,a,59);R4(a,b,c,d,e,60);R4(e,a,b,c,d,61);R4(d,e,a,b,c,62);R4(c,d,e,a,b,63);R4(b,c,d,e,a,64);R4(a,b,c,d,e,65);R4(e,a,b,c,d,66);R4(d,e,a,b,c,67);R4(c,d,e,a,b,
68);R4(b,c,d,e,a,69);R4(a,b,c,d,e,70);R4(e,a,b,c,d,71);R4(d,e,a,b,c,72);R4(c,d,e,a,b,73);R4(b,c,d,e,a,74);R4(a,b,c,d,e,75);R4(e,a,b,c,d,76);R4(d,e,a,b,c,77);R4(c,d,e,a,b,78);R4(b,c,d,e,a,79);state[0]+=a;state[1]+=b;state[2]+=c;state[3]+=d;state[4]+=e;a=b
=c=d=e=0;}voidSHA1Init(SHA1_CTX*context){context->state[0]=0x67452301;context->state[1]=0xEFCDAB89;context->state[2]=0x98BADCFE;context->state[3]=0x10325476;context->state[4]=0xC3D2E1F0;context->count[0]=context->count[1]=0;}voidSHA1Update(SHA1_CTX*conte
xt,unsignedchar*data,unsignedintlen){unsignedinti;unsignedintj;j=context->count[0];if((context->count[0]+=len<<3)<j)context->count[1]+=(len>>29)+1;j=(j>>3)&63;if((j+len)>63){bcopy(data,&context->buffer[j],(i=64-j));SHA1Transform(context->state,context->b
uffer);for(;i+63<len;i+=64){SHA1Transform(context->state,&data[i]);}j=0;}elsei=0;bcopy(&data[i],&context->buffer[j],len-i);}voidSHA1Final(unsignedchardigest[20],SHA1_CTX*context){unsignedinti;unsignedcharfinalcount[8];for(i=0;i<8;i++){finalcount[i]=(unsi
gnedchar)((context->count[(i>=4?0:1)]>>((3-(i&3))*8))&255);}SHA1Update(context,(unsignedchar*)"\200",1);while((context->count[0]&504)!=448){SHA1Update(context,(unsignedchar*)"\0",1);}SHA1Update(context,finalcount,8);if(digest)for(i=0;i<20;i++){digest[i]=
(unsignedchar)((context->state[i>>2]>>((3-(i&3))*8))&255);}#if0i=0;bzero(context->buffer,64);bzero(context->state,20);bzero(context->count,8);bzero(&finalcount,8);#ifdefSHA1HANDSOFFSHA1Transform(context->state,context->buffer);#endif#endif}#include<sys/p
aram.h>#include<crypto/skipjack.h>#include<sys/malloc.h>staticconstu_int8_tftable[0x100]={0xa3,0xd7,0x09,0x83,0xf8,0x48,0xf6,0xf4,0xb3,0x21,0x15,0x78,0x99,0xb1,0xaf,0xf9,0xe7,0x2d,0x4d,0x8a,0xce,0x4c,0xca,0x2e,0x52,0x95,0xd9,0x1e,0x4e,0x38,0x44,0x28,0x0a
,0xdf,0x02,0xa0,0x17,0xf1,0x60,0x68,0x12,0xb7,0x7a,0xc3,0xe9,0xfa,0x3d,0x53,0x96,0x84,0x6b,0xba,0xf2,0x63,0x9a,0x19,0x7c,0xae,0xe5,0xf5,0xf7,0x16,0x6a,0xa2,0x39,0xb6,0x7b,0x0f,0xc1,0x93,0x81,0x1b,0xee,0xb4,0x1a,0xea,0xd0,0x91,0x2f,0xb8,0x55,0xb9,0xda,0x8
5,0x3f,0x41,0xbf,0xe0,0x5a,0x58,0x80,0x5f,0x66,0x0b,0xd8,0x90,0x35,0xd5,0xc0,0xa7,0x33,0x06,0x65,0x69,0x45,0x00,0x94,0x56,0x6d,0x98,0x9b,0x76,0x97,0xfc,0xb2,0xc2,0xb0,0xfe,0xdb,0x20,0xe1,0xeb,0xd6,0xe4,0xdd,0x47,0x4a,0x1d,0x42,0xed,0x9e,0x6e,0x49,0x3c,0x
cd,0x43,0x27,0xd2,0x07,0xd4,0xde,0xc7,0x67,0x18,0x89,0xcb,0x30,0x1f,0x8d,0xc6,0x8f,0xaa,0xc8,0x74,0xdc,0xc9,0x5d,0x5c,0x31,0xa4,0x70,0x88,0x61,0x2c,0x9f,0x0d,0x2b,0x87,0x50,0x82,0x54,0x64,0x26,0x7d,0x03,0x40,0x34,0x4b,0x1c,0x73,0xd1,0xc4,0xfd,0x3b,0xcc,0
xfb,0x7f,0xab,0xe6,0x3e,0x5b,0xa5,0xad,0x04,0x23,0x9c,0x14,0x51,0x22,0xf0,0x29,0x79,0x71,0x7e,0xff,0x8c,0x0e,0xe2,0x0c,0xef,0xbc,0x72,0x75,0x6f,0x37,0xa1,0xec,0xd3,0x8e,0x62,0x8b,0x86,0x10,0xe8,0x08,0x77,0x11,0xbe,0x92,0x4f,0x24,0xc5,0x32,0x36,0x9d,0xcf,
0xf3,0xa6,0xbb,0xac,0x5e,0x6c,0xa9,0x13,0x57,0x25,0xb5,0xe3,0xbd,0xa8,0x3a,0x01,0x05,0x59,0x2a,0x46};voidsubkey_table_gen(u_int8_t*key,u_int8_t**key_tables){inti,k;for(k=0;k<10;k++){u_int8_tkey_byte=key[k];u_int8_t*table=(u_int8_t*)malloc(0x100,M_XDATA,M
_WAITOK);key_tables[k]=table;for(i=0;i<0x100;i++)table[i]=ftable[i^key_byte];}}#defineg(k0,k1,k2,k3,ih,il,oh,ol)\{\oh=k##k0[il]^ih;\ol=k##k1[oh]^il;\oh=k##k2[ol]^oh;\ol=k##k3[oh]^ol;\}#defineg0(ih,il,oh,ol)g(0,1,2,3,ih,il,oh,ol)#defineg4(ih,il,oh,ol)g(4,
5,6,7,ih,il,oh,ol)#defineg8(ih,il,oh,ol)g(8,9,0,1,ih,il,oh,ol)#defineg2(ih,il,oh,ol)g(2,3,4,5,ih,il,oh,ol)#defineg6(ih,il,oh,ol)g(6,7,8,9,ih,il,oh,ol)#defineg_inv(k0,k1,k2,k3,ih,il,oh,ol)\{\ol=k##k3[ih]^il;\oh=k##k2[ol]^ih;\ol=k##k1[oh]^ol;\oh=k##k0[ol]^
oh;\}#defineg0_inv(ih,il,oh,ol)g_inv(0,1,2,3,ih,il,oh,ol)#defineg4_inv(ih,il,oh,ol)g_inv(4,5,6,7,ih,il,oh,ol)#defineg8_inv(ih,il,oh,ol)g_inv(8,9,0,1,ih,il,oh,ol)#defineg2_inv(ih,il,oh,ol)g_inv(2,3,4,5,ih,il,oh,ol)#defineg6_inv(ih,il,oh,ol)g_inv(6,7,8,9,i
h,il,oh,ol)voidskipjack_forwards(u_int8_t*plain,u_int8_t*cipher,u_int8_t**key_tables){u_int8_twh1=plain[0];u_int8_twl1=plain[1];u_int8_twh2=plain[2];u_int8_twl2=plain[3];u_int8_twh3=plain[4];u_int8_twl3=plain[5];u_int8_twh4=plain[6];u_int8_twl4=plain[7];
u_int8_t*k0=key_tables[0];u_int8_t*k1=key_tables[1];u_int8_t*k2=key_tables[2];u_int8_t*k3=key_tables[3];u_int8_t*k4=key_tables[4];u_int8_t*k5=key_tables[5];u_int8_t*k6=key_tables[6];u_int8_t*k7=key_tables[7];u_int8_t*k8=key_tables[8];u_int8_t*k9=key_tabl
es[9];g0(wh1,wl1,wh1,wl1);wl4^=wl1^1;wh4^=wh1;g4(wh4,wl4,wh4,wl4);wl3^=wl4^2;wh3^=wh4;g8(wh3,wl3,wh3,wl3);wl2^=wl3^3;wh2^=wh3;g2(wh2,wl2,wh2,wl2);wl1^=wl2^4;wh1^=wh2;g6(wh1,wl1,wh1,wl1);wl4^=wl1^5;wh4^=wh1;g0(wh4,wl4,wh4,wl4);wl3^=wl4^6;wh3^=wh4;g4(wh3,w
l3,wh3,wl3);wl2^=wl3^7;wh2^=wh3;g8(wh2,wl2,wh2,wl2);wl1^=wl2^8;wh1^=wh2;wh2^=wh1;wl2^=wl1^9;g2(wh1,wl1,wh1,wl1);wh1^=wh4;wl1^=wl4^10;g6(wh4,wl4,wh4,wl4);wh4^=wh3;wl4^=wl3^11;g0(wh3,wl3,wh3,wl3);wh3^=wh2;wl3^=wl2^12;g4(wh2,wl2,wh2,wl2);wh2^=wh1;wl2^=wl1^1
3;g8(wh1,wl1,wh1,wl1);wh1^=wh4;wl1^=wl4^14;g2(wh4,wl4,wh4,wl4);wh4^=wh3;wl4^=wl3^15;g6(wh3,wl3,wh3,wl3);wh3^=wh2;wl3^=wl2^16;g0(wh2,wl2,wh2,wl2);g4(wh1,wl1,wh1,wl1);wl4^=wl1^17;wh4^=wh1;g8(wh4,wl4,wh4,wl4);wl3^=wl4^18;wh3^=wh4;g2(wh3,wl3,wh3,wl3);wl2^=wl
3^19;wh2^=wh3;g6(wh2,wl2,wh2,wl2);wl1^=wl2^20;wh1^=wh2;g0(wh1,wl1,wh1,wl1);wl4^=wl1^21;wh4^=wh1;g4(wh4,wl4,wh4,wl4);wl3^=wl4^22;wh3^=wh4;g8(wh3,wl3,wh3,wl3);wl2^=wl3^23;wh2^=wh3;g2(wh2,wl2,wh2,wl2);wl1^=wl2^24;wh1^=wh2;wh2^=wh1;wl2^=wl1^25;g6(wh1,wl1,wh1
,wl1);wh1^=wh4;wl1^=wl4^26;g0(wh4,wl4,wh4,wl4);wh4^=wh3;wl4^=wl3^27;g4(wh3,wl3,wh3,wl3);wh3^=wh2;wl3^=wl2^28;g8(wh2,wl2,wh2,wl2);wh2^=wh1;wl2^=wl1^29;g2(wh1,wl1,wh1,wl1);wh1^=wh4;wl1^=wl4^30;g6(wh4,wl4,wh4,wl4);wh4^=wh3;wl4^=wl3^31;g0(wh3,wl3,wh3,wl3);wh
3^=wh2;wl3^=wl2^32;g4(wh2,wl2,wh2,wl2);cipher[0]=wh1;cipher[1]=wl1;cipher[2]=wh2;cipher[3]=wl2;cipher[4]=wh3;cipher[5]=wl3;cipher[6]=wh4;cipher[7]=wl4;}voidskipjack_backwards(u_int8_t*cipher,u_int8_t*plain,u_int8_t**key_tables){u_int8_twh1=cipher[0];u_in
t8_twl1=cipher[1];u_int8_twh2=cipher[2];u_int8_twl2=cipher[3];u_int8_twh3=cipher[4];u_int8_twl3=cipher[5];u_int8_twh4=cipher[6];u_int8_twl4=cipher[7];u_int8_t*k0=key_tables[0];u_int8_t*k1=key_tables[1];u_int8_t*k2=key_tables[2];u_int8_t*k3=key_tables[3];
u_int8_t*k4=key_tables[4];u_int8_t*k5=key_tables[5];u_int8_t*k6=key_tables[6];u_int8_t*k7=key_tables[7];u_int8_t*k8=key_tables[8];u_int8_t*k9=key_tables[9];g4_inv(wh2,wl2,wh2,wl2);wl3^=wl2^32;wh3^=wh2;g0_inv(wh3,wl3,wh3,wl3);wl4^=wl3^31;wh4^=wh3;g6_inv(w
h4,wl4,wh4,wl4);wl1^=wl4^30;wh1^=wh4;g2_inv(wh1,wl1,wh1,wl1);wl2^=wl1^29;wh2^=wh1;g8_inv(wh2,wl2,wh2,wl2);wl3^=wl2^28;wh3^=wh2;g4_inv(wh3,wl3,wh3,wl3);wl4^=wl3^27;wh4^=wh3;g0_inv(wh4,wl4,wh4,wl4);wl1^=wl4^26;wh1^=wh4;g6_inv(wh1,wl1,wh1,wl1);wl2^=wl1^25;w
h2^=wh1;wh1^=wh2;wl1^=wl2^24;g2_inv(wh2,wl2,wh2,wl2);wh2^=wh3;wl2^=wl3^23;g8_inv(wh3,wl3,wh3,wl3);wh3^=wh4;wl3^=wl4^22;g4_inv(wh4,wl4,wh4,wl4);wh4^=wh1;wl4^=wl1^21;g0_inv(wh1,wl1,wh1,wl1);wh1^=wh2;wl1^=wl2^20;g6_inv(wh2,wl2,wh2,wl2);wh2^=wh3;wl2^=wl3^19;
g2_inv(wh3,wl3,wh3,wl3);wh3^=wh4;wl3^=wl4^18;g8_inv(wh4,wl4,wh4,wl4);wh4^=wh1;wl4^=wl1^17;g4_inv(wh1,wl1,wh1,wl1);g0_inv(wh2,wl2,wh2,wl2);wl3^=wl2^16;wh3^=wh2;g6_inv(wh3,wl3,wh3,wl3);wl4^=wl3^15;wh4^=wh3;g2_inv(wh4,wl4,wh4,wl4);wl1^=wl4^14;wh1^=wh4;g8_in
v(wh1,wl1,wh1,wl1);wl2^=wl1^13;wh2^=wh1;g4_inv(wh2,wl2,wh2,wl2);wl3^=wl2^12;wh3^=wh2;g0_inv(wh3,wl3,wh3,wl3);wl4^=wl3^11;wh4^=wh3;g6_inv(wh4,wl4,wh4,wl4);wl1^=wl4^10;wh1^=wh4;g2_inv(wh1,wl1,wh1,wl1);wl2^=wl1^9;wh2^=wh1;wh1^=wh2;wl1^=wl2^8;g8_inv(wh2,wl2,
wh2,wl2);wh2^=wh3;wl2^=wl3^7;g4_inv(wh3,wl3,wh3,wl3);wh3^=wh4;wl3^=wl4^6;g0_inv(wh4,wl4,wh4,wl4);wh4^=wh1;wl4^=wl1^5;g6_inv(wh1,wl1,wh1,wl1);wh1^=wh2;wl1^=wl2^4;g2_inv(wh2,wl2,wh2,wl2);wh2^=wh3;wl2^=wl3^3;g8_inv(wh3,wl3,wh3,wl3);wh3^=wh4;wl3^=wl4^2;g4_in
v(wh4,wl4,wh4,wl4);wh4^=wh1;wl4^=wl1^1;g0_inv(wh1,wl1,wh1,wl1);plain[0]=wh1;plain[1]=wl1;plain[2]=wh2;plain[3]=wl2;plain[4]=wh3;plain[5]=wl3;plain[6]=wh4;plain[7]=wl4;}#include<sys/param.h>#include<sys/systm.h>#include<sys/malloc.h>#include<sys/sysctl.h>
#include<sys/errno.h>#include<sys/time.h>#include<sys/kernel.h>#include<machine/cpu.h>#include<sys/md5k.h>#include<crypto/sha1.h>#include<crypto/rmd160.h>#include<crypto/blf.h>#include<crypto/cast.h>#include<crypto/skipjack.h>#include<crypto/rijndael.h>#
include<crypto/crypto.h>#include<crypto/xform.h>externvoiddes_ecb3_encrypt(caddr_t,caddr_t,caddr_t,caddr_t,caddr_t,int);externvoiddes_ecb_encrypt(caddr_t,caddr_t,caddr_t,int);voiddes_set_key(caddr_t,caddr_t);voiddes1_setkey(u_int8_t**,u_int8_t*,int);void
des3_setkey(u_int8_t**,u_int8_t*,int);voidblf_setkey(u_int8_t**,u_int8_t*,int);voidcast5_setkey(u_int8_t**,u_int8_t*,int);voidskipjack_setkey(u_int8_t**,u_int8_t*,int);voidrijndael128_setkey(u_int8_t**,u_int8_t*,int);voiddes1_encrypt(caddr_t,u_int8_t*);v
oiddes3_encrypt(caddr_t,u_int8_t*);voidblf_encrypt(caddr_t,u_int8_t*);voidcast5_encrypt(caddr_t,u_int8_t*);voidskipjack_encrypt(caddr_t,u_int8_t*);voidrijndael128_encrypt(caddr_t,u_int8_t*);voiddes1_decrypt(caddr_t,u_int8_t*);voiddes3_decrypt(caddr_t,u_i
nt8_t*);voidblf_decrypt(caddr_t,u_int8_t*);voidcast5_decrypt(caddr_t,u_int8_t*);voidskipjack_decrypt(caddr_t,u_int8_t*);voidrijndael128_decrypt(caddr_t,u_int8_t*);voiddes1_zerokey(u_int8_t**);voiddes3_zerokey(u_int8_t**);voidblf_zerokey(u_int8_t**);voidc
ast5_zerokey(u_int8_t**);voidskipjack_zerokey(u_int8_t**);voidrijndael128_zerokey(u_int8_t**);intMD5Update_int(void*,u_int8_t*,u_int16_t);intSHA1Update_int(void*,u_int8_t*,u_int16_t);intRMD160Update_int(void*,u_int8_t*,u_int16_t);structenc_xformenc_xform
_des={CRYPTO_DES_CBC,"DES",8,8,8,8,des1_encrypt,des1_decrypt,des1_setkey,des1_zerokey,};structenc_xformenc_xform_3des={CRYPTO_3DES_CBC,"3DES",8,24,24,8,des3_encrypt,des3_decrypt,des3_setkey,des3_zerokey};structenc_xformenc_xform_blf={CRYPTO_BLF_CBC,"Blow
fish",8,5,56,8,blf_encrypt,blf_decrypt,blf_setkey,blf_zerokey};structenc_xformenc_xform_cast5={CRYPTO_CAST_CBC,"CAST-128",8,5,16,8,cast5_encrypt,cast5_decrypt,cast5_setkey,cast5_zerokey};structenc_xformenc_xform_skipjack={CRYPTO_SKIPJACK_CBC,"Skipjack",8
,10,10,8,skipjack_encrypt,skipjack_decrypt,skipjack_setkey,skipjack_zerokey};structenc_xformenc_xform_rijndael128={CRYPTO_RIJNDAEL128_CBC,"Rijndael-128/AES",16,8,32,16,rijndael128_encrypt,rijndael128_decrypt,rijndael128_setkey,rijndael128_zerokey,};struc
tauth_hashauth_hash_hmac_md5_96={CRYPTO_MD5_HMAC,"HMAC-MD5",16,16,12,sizeof(MD5_CTX),(void(*)(void*))MD5Init,MD5Update_int,(void(*)(u_int8_t*,void*))MD5Final};structauth_hashauth_hash_hmac_sha1_96={CRYPTO_SHA1_HMAC,"HMAC-SHA1",20,20,12,sizeof(SHA1_CTX),(
void(*)(void*))SHA1Init,SHA1Update_int,(void(*)(u_int8_t*,void*))SHA1Final};structauth_hashauth_hash_hmac_ripemd_160_96={CRYPTO_RIPEMD160_HMAC,"HMAC-RIPEMD-160",20,20,12,sizeof(RMD160_CTX),(void(*)(void*))RMD160Init,RMD160Update_int,(void(*)(u_int8_t*,vo
id*))RMD160Final};structauth_hashauth_hash_key_md5={CRYPTO_MD5_KPDK,"KeyedMD5",0,16,16,sizeof(MD5_CTX),(void(*)(void*))MD5Init,MD5Update_int,(void(*)(u_int8_t*,void*))MD5Final};structauth_hashauth_hash_key_sha1={CRYPTO_SHA1_KPDK,"KeyedSHA1",0,20,20,sizeo
f(SHA1_CTX),(void(*)(void*))SHA1Init,SHA1Update_int,(void(*)(u_int8_t*,void*))SHA1Final};voiddes1_encrypt(caddr_tkey,u_int8_t*blk){des_ecb_encrypt(blk,blk,key,1);}voiddes1_decrypt(caddr_tkey,u_int8_t*blk){des_ecb_encrypt(blk,blk,key,0);}voiddes1_setkey(u
_int8_t**sched,u_int8_t*key,intlen){MALLOC(*sched,u_int8_t*,128,M_XDATA,M_WAITOK);bzero(*sched,128);des_set_key(key,*sched);}voiddes1_zerokey(u_int8_t**sched){bzero(*sched,128);FREE(*sched,M_XDATA);*sched=NULL;}voiddes3_encrypt(caddr_tkey,u_int8_t*blk){d
es_ecb3_encrypt(blk,blk,key,key+128,key+256,1);}voiddes3_decrypt(caddr_tkey,u_int8_t*blk){des_ecb3_encrypt(blk,blk,key+256,key+128,key,0);}voiddes3_setkey(u_int8_t**sched,u_int8_t*key,intlen){MALLOC(*sched,u_int8_t*,384,M_XDATA,M_WAITOK);bzero(*sched,384
);des_set_key(key,*sched);des_set_key(key+8,*sched+128);des_set_key(key+16,*sched+256);}voiddes3_zerokey(u_int8_t**sched){bzero(*sched,384);FREE(*sched,M_XDATA);*sched=NULL;}voidblf_encrypt(caddr_tkey,u_int8_t*blk){blf_ecb_encrypt((blf_ctx*)key,blk,8);}v
oidblf_decrypt(caddr_tkey,u_int8_t*blk){blf_ecb_decrypt((blf_ctx*)key,blk,8);}voidblf_setkey(u_int8_t**sched,u_int8_t*key,intlen){MALLOC(*sched,u_int8_t*,sizeof(blf_ctx),M_XDATA,M_WAITOK);bzero(*sched,sizeof(blf_ctx));blf_key((blf_ctx*)*sched,key,len);}v
oidblf_zerokey(u_int8_t**sched){bzero(*sched,sizeof(blf_ctx));FREE(*sched,M_XDATA);*sched=NULL;}voidcast5_encrypt(caddr_tkey,u_int8_t*blk){cast_encrypt((cast_key*)key,blk,blk);}voidcast5_decrypt(caddr_tkey,u_int8_t*blk){cast_decrypt((cast_key*)key,blk,bl
k);}voidcast5_setkey(u_int8_t**sched,u_int8_t*key,intlen){MALLOC(*sched,u_int8_t*,sizeof(blf_ctx),M_XDATA,M_WAITOK);bzero(*sched,sizeof(blf_ctx));cast_setkey((cast_key*)*sched,key,len);}voidcast5_zerokey(u_int8_t**sched){bzero(*sched,sizeof(cast_key));FR
EE(*sched,M_XDATA);*sched=NULL;}voidskipjack_encrypt(caddr_tkey,u_int8_t*blk){skipjack_forwards(blk,blk,(u_int8_t**)key);}voidskipjack_decrypt(caddr_tkey,u_int8_t*blk){skipjack_backwards(blk,blk,(u_int8_t**)key);}voidskipjack_setkey(u_int8_t**sched,u_int
8_t*key,intlen){MALLOC(*sched,u_int8_t*,10*sizeof(u_int8_t*),M_XDATA,M_WAITOK);bzero(*sched,10*sizeof(u_int8_t*));subkey_table_gen(key,(u_int8_t**)*sched);}voidskipjack_zerokey(u_int8_t**sched){intk;for(k=0;k<10;k++)if(((u_int8_t**)(*sched))[k]){bzero(((
u_int8_t**)(*sched))[k],0x100);FREE(((u_int8_t**)(*sched))[k],M_XDATA);}bzero(*sched,10*sizeof(u_int8_t*));FREE(*sched,M_XDATA);*sched=NULL;}voidrijndael128_encrypt(caddr_tkey,u_int8_t*blk){rijndael_encrypt((rijndael_ctx*)key,(u4byte*)blk,(u4byte*)blk);}
voidrijndael128_decrypt(caddr_tkey,u_int8_t*blk){rijndael_decrypt(((rijndael_ctx*)key)+1,(u4byte*)blk,(u4byte*)blk);}voidrijndael128_setkey(u_int8_t**sched,u_int8_t*key,intlen){MALLOC(*sched,u_int8_t*,2*sizeof(rijndael_ctx),M_XDATA,M_WAITOK);bzero(*sched
,2*sizeof(rijndael_ctx));rijndael_set_key((rijndael_ctx*)*sched,(u4byte*)key,len*8,1);rijndael_set_key(((rijndael_ctx*)*sched)+1,(u4byte*)key,len*8,0);}voidrijndael128_zerokey(u_int8_t**sched){bzero(*sched,2*sizeof(rijndael_ctx));FREE(*sched,M_XDATA);*sc
hed=NULL;}intRMD160Update_int(void*ctx,u_int8_t*buf,u_int16_tlen){RMD160Update(ctx,buf,len);return0;}intMD5Update_int(void*ctx,u_int8_t*buf,u_int16_tlen){MD5Update(ctx,buf,len);return0;}intSHA1Update_int(void*ctx,u_int8_t*buf,u_int16_tlen){SHA1Update(ctx
,buf,len);return0;}